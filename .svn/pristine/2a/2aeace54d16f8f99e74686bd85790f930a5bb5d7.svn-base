<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<script type="text/javascript" src="/resources/ckeditor5/ckeditor.js"></script>
<script type="text/javascript" src="/resources/js/jquery.min.js"></script>
<link type="text/css" href="/resources/ckeditor5/sample/css/sample.css" rel="stylesheet" media="screen" />
<link rel="stylesheet" href="../../resources/assets/css/templatemo-cyborg-gaming.css">
<script type="text/javascript">

</script>
<style>
body {
    margin: 0;
    padding: 0;
    font-family: pretendard;
    background-color: #fff;
}

.container {
    width: 80%;
    margin: 0 auto;
}

h1 {
    font-size: 28px;
    font-weight: bold;
    text-align: left;
    padding-top: 20px;
}

.input-title {
    flex: 1;
    font-size: 15px;
    border-radius: 8px;
    border: 1px solid #D9D9D9;
    height: 50px;
}

.title-group {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 30px;
}

.ck-editor__main .ck-content {
    height: 450px;
    border: 1px solid #000;
}

.faq-btn {
	background: white;
	color: #24D59E;
	border: 1px solid #24D59E;
	width: 170px;
	transition: all 0.3s ease 0s;
    text-align: center;
    font-weight: normal;
    padding: 8px 15px;
    border-radius: 5px;
}
label:not(.form-check-label):not(.custom-file-label) {
    font-weight: normal;
}
.faq-btn:hover {
	background-color: #24D59E;
	color: white;
}

.button-container {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.content-group {
    margin-top: 20px;
}

#file-list button {
	background: white;
	color: #232323;
	border: 1px solid #B5B5B5;
	transition: all 0.3s ease 0s;
	height: 25px;
	width:25px;
	text-align: center;
}

#file-list button:hover {
	background: #ECECEC;
	border: 1px solid #B5B5B5;
}

#file-list {
    display: flex;
}

</style>

<div class="container">
    <header>
        <h1>자유 게시판</h1>
    </header>
    <form name="registForm" id="registForm" action="/common/freeBoard/updatePost"  method="post" enctype="multipart/form-data">
    <input type="hidden" name="fileGroupSn" id="fileGroupSn" value="${fileGroupSn}">
    <div class="title-group">
       <div class="cat_main">
		<select class="form-control category" name="pstOthbcscope" id="pstOthbcscope" required>
		    <option value="" selected disabled hidden>카테고리 선택</option>
		    <c:forEach var="codeVO" items="${codeVOList}">
		        <option value="${codeVO.comCodeNm}">${codeVO.comCodeNm}</option>
		    </c:forEach>
		</select>
        </div>
        <input type="text" class="input-title" placeholder="제목을 작성해주세요" name="pstTtl" id="pstTtl" value="${boardVO.pstTtl}">
    </div>
    <div class="content-group">
        <div id="pstCnTemp" name="pstCnTemp">
	        <textarea id="pstCn" name="pstCn"></textarea>
        </div>
        <div>
			<label class="faq-btn" for="pstFileFile" id="file-input">
			  파일첨부
			</label>
			<div class="form-group nb">
			    <input type="file" class="input-file" hidden
			           name="pstFileFile" id="pstFileFile" multiple onchange="test(this.files)"/>
			    <div id="file-list"></div>
			</div>
	    </div>
    </div>
    <input type="hidden" name="pstSn" value="${boardVO.pstSn}">
    <div class="button-container">
        <button type="button" class="faq-btn btn-list" onclick="location.href='/common/freeBoard/freeList'">목록</button>
        <button type="submit" class="faq-btn btn-regist">수정</button>
    </div>
    <sec:csrfInput/>
    </form>
</div>
<script type="text/javascript">
//selectedFiles가 비어 있으면 fileGroupSn을 null로 설정하는 함수
function updateFileGroupSn() {
    const fileGroupSnInput = document.getElementById('fileGroupSn');
    if (selectedFiles.length === 0) {
        fileGroupSnInput.value = null;  // selectedFiles가 비어 있으면 null로 설정
    } else {
        fileGroupSnInput.value = "${fileGroupSn}";  // 값이 있으면 기존 fileGroupSn 유지
    }
}


let selectedFiles = [];


// 파일 삭제 시 배열에서 해당 파일을 제거하는 함수
function deleteFile(fileName) {
    selectedFiles = selectedFiles.filter(f => f.name !== fileName);
    console.log('Updated selected files:', selectedFiles);
    updateFileGroupSn();  // 파일 삭제 후 fileGroupSn 값 업데이트
}

// 파일 선택 시 동작하는 함수
function test(files) {
    const fileList = document.getElementById('file-list');  // 파일 리스트를 표시할 div
    for (let i = 0; i < files.length; i++) {
        selectedFiles.push(files[i]);  // 선택된 파일을 배열에 저장
        const item = document.createElement('div');  // 파일 리스트의 항목(div)
        const fileName = document.createTextNode(files[i].name);  // 파일 이름을 텍스트로 생성
        const deleteButton = document.createElement('button');  // 삭제 버튼 생성

        // 삭제 버튼 클릭 시 파일 항목을 제거하는 이벤트 리스너
        deleteButton.addEventListener('click', (event) => {
            item.remove();  // 화면에서 파일 항목(div)을 제거
            event.preventDefault();
            deleteFile(files[i].name);  // 배열에서 파일을 제거하는 함수 호출
            updateFileGroupSn();  // 삭제 후 fileGroupSn 값 업데이트
        });

        deleteButton.innerText = "x";  // 삭제 버튼에 텍스트 표시
        item.appendChild(fileName);  // 파일 이름을 파일 항목에 추가
        item.appendChild(deleteButton);  // 삭제 버튼을 파일 항목에 추가
        fileList.appendChild(item);  // 파일 항목을 파일 리스트에 추가
    }
    updateFileGroupSn();  // 파일 추가 후 fileGroupSn 값 업데이트
}

// selectedFiles가 비어 있으면 fileGroupSn을 null로 설정하는 함수
function updateFileGroupSn() {
    const fileGroupSnInput = document.getElementById('fileGroupSn');
    if (selectedFiles.length === 0) {
        fileGroupSnInput.value = null;  // selectedFiles가 비어 있으면 null로 설정
    } else {
        fileGroupSnInput.value = "${fileGroupSn}";  // 값이 있으면 기존 fileGroupSn 유지
    }
}

// CKEditor5 적용 및 데이터 넣기
ClassicEditor.create(document.querySelector('#pstCnTemp'), { 
    placeholder: '\n 내용을 작성해주세요 \n\n * 등록한 글은 사용자 아이디로 등록됩니다. \n * 저작권 침해, 음란, 청소년 유해물, 기타 위법 자료 등을 게시할 경우 게시글 삭제 및 작성자에게 경고 조치 됩니다.'
})
.then(editor => { 
    window.editor = editor;
    
    editor.setData('${boardVO.pstCn}');	// 입력된 값 넣는 곳!
    
    // 폼 제출 전 CKEditor의 내용을 textarea에 동기화
    document.querySelector('#registForm').addEventListener('submit', function(event) {
        document.querySelector('#pstCn').value = editor.getData();
    });
})
.catch(err => { console.error(err.stack); });
</script>
