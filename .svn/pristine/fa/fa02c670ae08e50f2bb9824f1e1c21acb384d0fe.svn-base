package kr.or.ddit.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collectors;

import javax.inject.Inject;

import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.mapper.MemResumeMapper;
import kr.or.ddit.mapper.UserMapper;
import kr.or.ddit.security.CustomUser;
import kr.or.ddit.service.MemResumeService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.CodeGrpVO;
import kr.or.ddit.vo.CodeVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.ResumeVO;
import lombok.extern.slf4j.Slf4j;

@RequestMapping("/member")
@Slf4j
@Controller
//@PreAuthorize("hasAnyRole('ROLE_MEMBER','ROLE_MEMENTER')")
public class MemResumeController {
	
	@Inject
	MemResumeService memResumeService;
	
	@Inject
	UserMapper userMapper;
	
	@Inject
	MemResumeMapper memResumeMapper;
	
	private String getLoggedInMbrId() {
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        CustomUser userDetails = (CustomUser) authentication.getPrincipal();
        return userDetails.getUsername(); // CustomUser에 mbrId 필드가 있다고 가정
    }
	
	public Map<String, CodeGrpVO> codeGrpSelect(List<String> list) {
	    List<CodeGrpVO> resultList = userMapper.codeGrpSelect(list);
	    return resultList.stream().collect(Collectors.toMap(CodeGrpVO::getComCodeGrp, Function.identity()));
	}
	
	@GetMapping("/resume")
	public String reume(Model model, 
			@RequestParam(value = "currentPage", required = false, defaultValue="1") Integer currentPage) {
		log.info("이력서 관리페이지");
		String mbrId = getLoggedInMbrId();
		Map<String, Object> map = new HashMap<String,Object>();
		log.info("mbrId => "+mbrId);
		log.info("currentPage => "+currentPage);
        map.put("mbrId", mbrId);
        map.put("currentPage", currentPage);
		ResumeVO openResume = memResumeService.openResume(mbrId); 
		List<ResumeVO> resumeVOList = memResumeService.resumeList(map);
		List<CodeVO> codeVOList = userMapper.codeSelect("RLSC");
		int total = memResumeMapper.resumeListTotal(mbrId);
		ArticlePage<ResumeVO> articlePage = new ArticlePage<ResumeVO>(total, currentPage, 3, resumeVOList, map);
		model.addAttribute("openResume", openResume);
		model.addAttribute("resumeVOList", resumeVOList);
		model.addAttribute("codeVOList", codeVOList);
		model.addAttribute("articlePage", articlePage);
		model.addAttribute("total", total);
		return "member/mypage/resume";
	}
	
	
	@GetMapping("/resumeRegist")
	public String resumeRegist(Model model, String resumeNo) {
		log.info("이력서 생성페이지");
		String mbrId = getLoggedInMbrId();
		Map<String, Object> map = new HashMap<String,Object>();
		map.put("mbrId", mbrId);
		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		CustomUser customUser = (CustomUser) authentication.getPrincipal();
		MemberVO memVO = customUser.getMemVO();
		ResumeVO openResume = memResumeService.openResume(mbrId);
		List<String> list = new ArrayList<String>();
		list.add("GEND"); // 성별
		list.add("ACSE"); // 학력
		list.add("ACRC"); // 인정 학력
		list.add("ACGD"); // 졸업 구분
		list.add("AGPN"); // 학점
		list.add("CRDT"); // 직무
		list.add("CRBG"); // 직급
		list.add("WRGN"); // 지역
		list.add("SK"); // 스킬
		list.add("ACTS"); // 활동구분
		list.add("CLW"); // 자격/어학/수상 구분
		list.add("ACQS");  // 자격 합격구분
		list.add("LSLN");  // 어학 언어
		list.add("LSGD"); // 어학 급수
		list.add("LSYN"); // 어학 취득 여부
		list.add("POFL"); // 포트폴리오 파일
		Map<String, CodeGrpVO> codeGrpVOMap = codeGrpSelect(list);
		model.addAttribute("openResume", openResume);
		model.addAttribute("codeGrpVOMap", codeGrpVOMap);
		model.addAttribute("memVO", memVO);
		return "member/resumeRegist";
	}
	
}
