<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="sec"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<meta charset="UTF-8">
<!-- 회원프로필css -->
<link rel="stylesheet"
	href="<%=request.getContextPath()%>/resources/css/member/profile.css" />
<!-- 구글 아이콘 -->
<link rel="stylesheet"
	href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20,200,0,0" />
<script>
//div 추가하기
function addCareer() {
    // 추가할 <div> 요소 생성
    const newElement = document.createElement('div');

    // <div> 요소 안에 html 요소 추가
	newElement.innerHTML = `
              <form name="add_Form" id="add_Form" action="/member/careerAddAjax" method="post">
              <div id="addForm">
                 <h5 style="margin-left : -70px;">경력 추가</h5>
                 <br>
                 <input name="careerNo" class="del" type="hidden"/>
                 <input name="mbrId" class="add" type="hidden" value="test1"/>
                 <label for="careerNm">기업명*</label><input name="careerNm" class="add" type="text" placeholder="예) 대덕인재개발원"/><br>
                 <label for="careerEnt">역할*</label><input name="careerEnt" class="add"  type="text" placeholder="예) 풀스택 개발자"/><br>
                    <label for="careerBegYm">재직기간*</label>
                 <div style="display: flex; width: 110px">
                    <input name="careerBegYm" id="careerBegYm" class="add" type="text" placeholder="예) 202108"/>
                    <p style="margin: 0px 10px 0px 10px;">-</p>
                    <input name="careerEndYm" id="careerEndYm" type="text" class="add" placeholder="퇴사년도"/><br>
                 </div>
	             	<span id="workChk">재직중&nbsp;&nbsp;<input id="workChkbox" type="checkbox"/></span>
	             	<br>
                 <div style="display: flex; justify-content: flex-end;">
                    <input id="cancelAjax" type="reset" value="취소"/><input id="addAjax" type="button" value="저장"/>
                 </div>
                 <hr style="width : 796px; margin-left: -70px;">
              </div> 
              <sec:csrfInput />
           </form>      
           `;
      
           
    // 생성된 <div> 요소를 추가할 부모요소(container div) 선택
    const container = document.getElementById('careerBox');
    const firstChild = container.firstChild;

    // 생성된 <div> 요소를 기존의 container div에 자식 요소로 추가
    container.insertBefore(newElement, firstChild);  

    // 취소 버튼에 클릭 이벤트를 추가하여 해당 요소를 삭제
    $(newElement).find('#cancelAjax').on('click', function() {
        $(newElement).remove();
    });
    
 // jQuery로 재직중 체크 여부 확인 후 '현재' 표시 (DB에는 null로 저장)
    $('#workChkbox').change(function() {
        const $careerEndYm = $('#careerEndYm');
        if ($(this).is(':checked')) {
            $careerEndYm.val('');  // DB에는 null로 저장하기 위해 값은 비운다
            $careerEndYm.prop('disabled', true);  // 입력 필드 비활성화
            $careerEndYm.attr('placeholder', '현재');  // 화면에는 '현재'로 표시
        } else {
            $careerEndYm.prop('disabled', false);
            $careerEndYm.attr('placeholder', '퇴사년도');  // 체크 해제 시 기본 placeholder로 복구
        }
    });

}

$(function() {
    $(".edit").on("click", function() {
        $('.edit-control').removeAttr("readonly");
    });

    // 동적으로 추가된 경력 추가 버튼에 이벤트 연결 (이벤트 위임 사용)
    $(document).on("click", "#addAjax", function() {
        var mbrId = $('input[name="mbrId"]').val();
        var careerNm = $('input[name="careerNm"]').val();
        var careerEnt = $('input[name="careerEnt"]').val();
        var careerBegYm = $('input[name="careerBegYm"]').val();
        var careerEndYm = $('input[name="careerEndYm"]').val();

        // 경력 데이터가 모두 입력되었는지 확인
        if (!careerNm || !careerEnt || !careerBegYm) {
            alert("필수 항목을 모두 입력해주세요.");
            return;
        }
        

        // AJAX 요청으로 서버에 경력 데이터 전송
        $.ajax({
            url: '/member/careerAddAjax', 
            contentType: 'application/json',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify({
                mbrId: "test1",
                careerNm: careerNm,
                careerEnt: careerEnt,
                careerBegYm: careerBegYm,
                careerEndYm: careerEndYm
            }),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(result) {
            	console.log("result", result)
                alert('경력 추가가 성공적으로 완료되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
            },
            error: function(xhr, status, error) {
            	console.error("추가 실패 : ", error)
                alert('경력 추가를 실패했습니다.');
            }
        });
    });
    
    // 경력 삭제 실행
	$(document).on("click", ".delAjax", function() {
		
	    if (!confirm("경력을 삭제하시겠습니까?")) {
	        return;  
	    }
	    
    // 클릭된 삭제 버튼에서 가장 가까운 부모 요소에서 경력 번호와 회원 ID 가져오기
    var careerNo = $(this).closest(".career-item").find("input[name='careerNo']").val();
    var mbrId = $(this).closest(".career-item").find("input[name='mbrId']").val();
    	
    	$.ajax({
    		url:'/member/careerDelAjax',
    		contentType:'application/json',
    		data:JSON.stringify({
                mbrId: mbrId,
                careerNo:careerNo
    		}),
    		type:'POST',
    		dataType:'json',
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
                alert('경력이 삭제되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
    		},
    		error: function(xhr, status, error) {
                alert('삭제를 실패했습니다.');
            }
    		
    		
    	})
    })
});
</script>

<div class="content-wrapper">
	<div id="topPro">
		<br>
		<div id="nav">
			<img alt="" src="../resources/images/member/토끼.jpg" class="img">
		</div>
		<br>
		<p id="mbrNm">${prfVO.mbrNm}</p>
		<input type="button" id="scout" value="스카우트" />
		<div id="introduce">
			<p>
				아르르르르릉ㄹ아르을으랑랑라알아라아아아아아아아아 자자잠잠자자자졸려 <br>가나가나가나가나다라마바사
			</p>
		</div>
		<hr>
		<div id="introduce2">
			<p>
				주요 경력 : <input type="text" value="${prfVO.careerNm}" readonly /><span
					class="material-symbols-outlined">edit</span>
			</p>
			<input style="margin-left: 330px;" type="text"
				value="${prfVO.proflContent}" readonly />
		</div>
	</div>

	<div class="container">
		<div class="row">
			<div class="col-left">
				<div id="careerBox">
					<h5 style="margin-left: 20px;">경력</h5>
					<input class="tool edit" type="button" onclick="addCareer()"
						id="addBtn" value="+추가" /><br>

					<div id="career">
						<c:if test="${not empty prfCareerVOList}">
							<c:forEach var="careerVO" items="${prfCareerVOList}">
								<div class="career-item"
									style="border-bottom: 1px solid #ccc; padding-bottom: 10px; margin-bottom: 20px;">
									<!-- 제목과 아이콘을 flexbox로 우측 정렬 -->
									<div style="display: flex; justify-content: space-between; align-items: center;">
										<!-- 경력 번호 -->
										<input type="hidden" name="careerNo" value="${careerVO.careerNo}"/>
										<!-- 회원 아이디 -->
										<input type="hidden" name="mbrId" value="${careerVO.mbrId}"/>

										<!-- 경력 제목 -->
										<input type="text" class="edit-control title" name="careerNm"
											value="${careerVO.careerNm}" readonly style="flex: 1;">

										<!-- Edit/Delete 아이콘 -->
										<div style="display: flex; margin-right: -40px;">
											<span class="material-symbols-outlined edit">edit</span> 
											<span class="material-symbols-outlined edit delAjax">delete</span>
										</div>
									</div>

									<!-- 기업명 -->
									<input type="text" class="edit-control careerEnt" name="careerEnt"
										value="${careerVO.careerEnt}" readonly><br>

									<!-- 입사년도 -->
									<input type="text" class="edit-control careerBegYm" name="careerBegYm"
										value="${careerVO.careerBegYm.substring(0, 4)}.${careerVO.careerBegYm.substring(4, 6)}"
										readonly> -

									<!-- 퇴사년도가 없으면 "현재"로 표시 -->
									<c:choose>
										<c:when test="${empty careerVO.careerEndYm}">
											<input type="text" class="edit-control careerEndYm"
												value="현재" name="careerEndYm" readonly>
										</c:when>
										<c:otherwise>
											<input type="text" class="edit-control careerEndYm" name="careerEndYm"
												value="${careerVO.careerEndYm.substring(0, 4)}.${careerVO.careerEndYm.substring(4, 6)}"
												readonly>
										</c:otherwise>
									</c:choose>
									<br>
								</div>
							</c:forEach>
						</c:if>
					</div>
				</div>
							<div id="acbg">
								<p>${prfAcbgVOList}</p>
							</div>
							<div id="act">
								<p>${prfActVOList}</p>
							</div>
							<div id="win">
								<p>${prfWnpzVOList}</p>
							</div>
						</div>
						<div class="col-right">
							<div id="businessBox">
								<h5>활동분야</h5>
								<div id="business">
									<p>${prfBusinessVOList}</p>
								</div>
							</div>
							<div id="crtfctBox">
								<div id="crtfct">
									<p>${prfCrtfctVOList}</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>


</body>