<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="sec"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<sec:authorize access="isAuthenticated()">
       <sec:authentication property="principal.memVO" var="priVO"/>
</sec:authorize>
<meta charset="UTF-8">
<!-- 회원프로필css -->
<link rel="stylesheet"
	href="<%=request.getContextPath()%>/resources/css/member/profile.css" />
<!-- 구글 아이콘 -->
<link rel="stylesheet"
	href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20,200,0,0" />
<script type="text/javascript" src="/resources/js/sweetalert2.js"></script>	
<script>

//--------------------------------- 경력 추가
function addCareer() {
    // 추가할 <div> 요소 생성
    const newElement = document.createElement('div');

    // <div> 요소 안에 html 요소 추가
	newElement.innerHTML = `
              <form name="add_Form" id="add_Form" action="/member/careerAddAjax" method="post">
              <div id="addForm">
                 <h5 style="margin-left : -70px;">경력 추가</h5>
                 <br>
                 <input name="careerNo" class="del" type="hidden"/>
                 <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
                 
                 <label for="careerNm">역할<span class="required">*</span></label><input name="careerNm" class="add carInp" type="text" placeholder="예) 대덕인재개발원"/><br>
                 
                 <label for="careerEnt">기업명<span class="required">*</span></label><input name="careerEnt" class="add carInp"  type="text" placeholder="예) 풀스택 개발자"/><br>
                 
                 <label for="careerBegYm">재직기간<span class="required">*</span></label>
                 <div style="display: flex; width: 110px">
                    <input name="careerBegYm" id="careerBegYm" class="add" type="text" placeholder="예) 202108"/>
                    <p style="margin: 0px 10px 0px 10px;">-</p>
                    <input name="careerEndYm" id="careerEndYm" type="text" class="add" placeholder="퇴사년도"/><br>
                 </div>
	             	<span id="workChk">재직중&nbsp;&nbsp;<input id="workChkbox" type="checkbox"/></span>
	             	<br>
                 
	             	<div style="display: flex; justify-content: flex-end;">
                    <input id="cancelAjax" type="reset" value="취소"/><input id="addAjax" type="button" value="저장"/>
                 </div>
                 <hr style="width : 796px; margin-left: -70px;">
              </div> 
              <sec:csrfInput />
           </form>      
           `;
      
           
    // 생성된 <div> 요소를 추가할 부모요소(container div) 선택
    const container = document.getElementById('careerBox');
    const firstChild = container.firstChild;

    // 생성된 <div> 요소를 기존의 container div에 자식 요소로 추가
    container.insertBefore(newElement, firstChild);  

    // 취소 버튼에 클릭 이벤트를 추가하여 해당 요소를 삭제
    $(newElement).find('#cancelAjax').on('click', function() {
        $(newElement).remove();
    });
    
 // jQuery로 재직중 체크 여부 확인 후 '현재' 표시 (DB에는 null로 저장)
    $('#workChkbox').change(function() {
        const $careerEndYm = $('#careerEndYm');
        if ($(this).is(':checked')) {
            $careerEndYm.val('');  
            $careerEndYm.prop('disabled', true);  
            $careerEndYm.attr('placeholder', '현재');  
        } else {
            $careerEndYm.prop('disabled', false);
            $careerEndYm.attr('placeholder', '퇴사년도');  
        }
    });

}


$(function() {

    // 동적으로 추가된 경력 추가 버튼에 이벤트 연결 (이벤트 위임 사용)
    $(document).on("click", "#addAjax", function() {
        var mbrId = $('input[name="mbrId"]').val();
        var careerNm = $('input[name="careerNm"]').val();
        var careerEnt = $('input[name="careerEnt"]').val();
        var careerBegYm = $('input[name="careerBegYm"]').val();
        var careerEndYm = $('input[name="careerEndYm"]').val();

        if (!careerNm || !careerEnt || !careerBegYm) {
            alert("필수 항목을 모두 입력해주세요.");
            return;
        }
        
        let data={
                "mbrId": mbrId,
                "careerNm": careerNm,
                "careerEnt": careerEnt,
                "careerBegYm": careerBegYm,
                "careerEndYm": careerEndYm
        }
        

        $.ajax({
            url: '/member/careerAddAjax', 
            contentType: 'application/json',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(data),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(result) {
            	console.log("result", result)
                alert('경력 추가가 성공적으로 완료되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
            },
            error: function(xhr, status, error) {
            	console.error("추가 실패 : ", error)
                alert('경력 추가를 실패했습니다.');
            }
        });
    });
    
    
//--------------------------------- 경력 수정 실행
    $(document).on("click", ".editAjax", function() {

    var careerItem = $(this).closest('.career-item');
    var mbrId = $('input[name="mbrId"]').val();
    var careerNo = careerItem.find('input[name="careerNo"]').val(); 
    var careerNm = careerItem.find('input[name="careerNm"]').val(); 
    var careerEnt = careerItem.find('input[name="careerEnt"]').val();  
    var careerBegYm = careerItem.find('input[name="careerBegYm"]').val();  
    var careerEndYm = careerItem.find('input[name="careerEndYm"]').val();  

    var isCurrentlyEmployed = (careerEndYm === '현재');
    if (isCurrentlyEmployed) {
        careerEndYm = ''; 
    }

    const editFormHtml = `
        <form name="edit_Form" id="edit_Form" action="/member/careerUpdateAjax" method="post">
            <div id="editForm">
                <h5 style="width:240px;">경력 수정</h5>
                <br>
                <input name="careerNo" class="del" type="hidden" value="${careerNo}"/>
                <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
                <div style="display: flex; flex-direction: column;">
	                <label for="careerNm">역할<span class="required">*</span></label>
	                <input name="careerNm" class="add carInp" type="text" value="${careerNm}" /><br>
	                
	                <label for="careerEnt">기업명<span class="required">*</span></label>
	                <input name="careerEnt" class="add carInp" type="text" value="${careerEnt}" /><br>
	                
	                <label for="careerBegYm">재직기간<span class="required">*</span></label>
	                <div style="display: flex; width: 110px">
	                    <input name="careerBegYm" id="careerBegYm" class="add" type="text" value="${careerBegYm}"/>
	                    <p style="margin: 0px 10px 0px 10px;">-</p>
	                    <input name="careerEndYm" id="careerEndYm" type="text" class="add" value="${careerEndYm}" /><br>
	                </div>
	                <span id="workChk">재직중&nbsp;&nbsp;<input id="workChkbox" type="checkbox" ${isCurrentlyEmployed ? 'checked' : ''}/></span>
                <br>
                </div>
                <div style="display: flex; justify-content: flex-end;">
                    <input id="cancelAjax" type="button" value="취소"/>
                    <input id="updateAjax" type="button" value="저장"/>
                </div>
            </div>
            <sec:csrfInput />
        </form>
    `;

    // 기존 경력 항목을 수정 폼으로 교체
    careerItem.html(editFormHtml);
    
    // 폼 필드에 값을 명시적으로 설정
    $('input[name="mbrId"]').val(mbrId);
    $('input[name="careerNo"]').val(careerNo);
    $('input[name="careerNm"]').val(careerNm);
    $('input[name="careerEnt"]').val(careerEnt);
    $('input[name="careerBegYm"]').val(careerBegYm);
    $('input[name="careerEndYm"]').val(careerEndYm);

    // 재직중 체크박스 설정
    if (isCurrentlyEmployed) {
        $('#workChkbox').prop('checked', true);
        $('#careerEndYm').prop('disabled', true);
        $('#careerEndYm').attr('placeholder', '현재');
    }

    $('#workChkbox').on('change', function() {
        const $careerEndYm = $('#careerEndYm');
        if ($(this).is(':checked')) {
            $careerEndYm.val('').prop('disabled', true).attr('placeholder', '현재');
        } else {
            $careerEndYm.prop('disabled', false).attr('placeholder', '퇴사년도');
        }
    });

    // 취소 버튼 클릭 시 원래 목록으로 복원
    $('#cancelAjax').on('click', function() {
        location.reload(); 
    });
    
    $("#updateAjax").on("click",function(){
    	let data = {
    			"careerNo": careerNo,
   	            "mbrId": mbrId,
   	            "careerNm": $('input[name="careerNm"]').val(),
   	            "careerEnt": $('input[name="careerEnt"]').val(),
   	            "careerBegYm": $('input[name="careerBegYm"]').val().replaceAll('.',''),
   	            "careerEndYm": $('#workChkbox').is(':checked') ? '' : $('input[name="careerEndYm"]').val().replaceAll('.','')
    	}
    	
    	$.ajax({
    		url:"/member/careerUpdateAjax",
    		contentType:"application/json;charset=utf-8",
    		data:JSON.stringify(data),
    		type:"post",
    		dataType:"json",
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
    			alert("수정이 완료되었습니다.");
    			location.reload();
    		},
    		error:function(xhr,status,error){
    			alert("수정 실패");
    		}
	    })
    })
    
});

    
//--------------------------------- 경력 삭제 실행
	$(document).on("click", ".delAjax", function() {
		
	    if (!confirm("해당 경력내역을 삭제하시겠습니까?")) {
	        return;  
	    }
	    
    var careerNo = $(this).closest(".career-item").find("input[name='careerNo']").val();
    var mbrId = $(this).closest(".career-item").find("input[name='mbrId']").val();
    	
    let data={
            "mbrId": mbrId,
            "careerNo":careerNo
    }
    	$.ajax({
    		url:'/member/careerDelAjax',
    		contentType:'application/json',
    		data:JSON.stringify(data),
    		type:'POST',
    		dataType:'json',
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
                alert('경력이 삭제되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
    		},
    		error: function(xhr, status, error) {
                alert('삭제를 실패했습니다.');
            }
    		
    		
    	})
    })

});

</script>
<script>
//--------------------------------- 학력 추가
function addAcbg() {
    // 추가할 <div> 요소 생성
    const newElement = document.createElement('div');
    
    // <div> 요소 안에 html 요소 추가
    newElement.innerHTML = `            
        <form name="add_ACForm" id="add_ACForm" action="/member/acbgAddAjax" method="post">
            <div id="addForm">
                <h5 style="margin-left : -70px;">학력 추가</h5>
                <br>
                <input name="acbgNo" class="add" type="hidden"/>
                <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
                <div id="schoolBox">
                    <div style="margin-right:10px;">
                        <label for="prseSeCd">학교구분<span class="required">*</span></label><br>
                        <select name="prseSeCd" id="prseSeCd">
                            <option value="" selected disabled>학교 구분 선택</option>
                            <c:forEach var="prseSeCd" items="${prseList}">
                                <option value="${prseSeCd.comCode}">${prseSeCd.comCodeNm}</option>
                            </c:forEach>
                        </select>
                    </div>
                    <div>
                        <label for="acbgSchlNm">학교<span class="required">*</span></label><br>
                        <input id="acbgSchlNm" name="acbgSchlNm" class="add" type="text" placeholder="예) 대덕인재대학교"/><br>
                    </div>
                </div>
                <br>
                <div id="spcBox">
                    <div style="margin-right:10px;">
                        <label for="acdeSeCd">학위<span class="required">*</span></label><br>
                        <select name="acdeSeCd" id="acdeSeCd">
                            <option value="" selected disabled>학위 선택</option>
                            <c:forEach var="acdeSeCd" items="${acdeList}">
                                <option value="${acdeSeCd.comCode}">${acdeSeCd.comCodeNm}</option>
                            </c:forEach>
                        </select>
                    </div>    
                    <div>
                        <label for="acbgMjrNm">전공<span class="required">*</span></label><br>
                        <input id="acbgMjrNm" name="acbgMjrNm" class="add" type="text" placeholder="예) 컴퓨터 공학과"/><br>
                    </div>                        
                </div>  
                <br>
                <label for="acbgMtcltnym">재학 기간<span class="required">*</span></label>
                <div style="display: flex; width: 110px">
                    <input name="acbgMtcltnym" id="acbgMtcltnym" class="add" type="text" placeholder="예) 202108"/>
                    <p style="margin: 0px 10px 0px 10px;">-</p>
                    <input name="acbgGrdtnym" id="acbgGrdtnym" type="text" class="add" placeholder="졸업년도"/><br>
                </div>
                <div style="display: flex; justify-content: flex-end;">
                    <input id="cancelAcbglAjax" type="reset" value="취소"/><input id="addAcbgAjax" type="button" value="저장"/>
                </div>
                <hr style="width : 796px; margin-left: -70px;">
            </div> 
            <sec:csrfInput />
        </form>      
    `;
      
    // 생성된 <div> 요소를 추가할 부모요소(container div) 선택
    const container = document.getElementById('acbgBox');
    const firstChild = container.firstChild;

    // 생성된 <div> 요소를 기존의 container div에 자식 요소로 추가
    container.insertBefore(newElement, firstChild);  

    // 학교 구분 선택에 따른 동적 변경 처리
    const schoolTypeSelect = newElement.querySelector('#prseSeCd');
    const spcBox = newElement.querySelector('#spcBox');

    schoolTypeSelect.addEventListener('change', function() {
        if (schoolTypeSelect.value === 'PRSE02') {
            spcBox.innerHTML = `
                <div style="margin-right:10px;">
                    <label for="acspSeCd">전공계열*</label><br>
                    <select name="acspSeCd" id="acspSeCd">
                        <option value="" selected disabled>전공 계열 선택</option>
                        <c:forEach var="acspSeCd" items="${acspList}">
                            <option value="${acspSeCd.comCode}">${acspSeCd.comCodeNm}</option>
                        </c:forEach>
                    </select>
                </div>
            `;
        } else {
            spcBox.innerHTML = `
                <div style="margin-right:10px;">
                    <label for="acdeSeCd">학위*</label><br>
                    <select name="acdeSeCd" id="acdeSeCd">
                        <option value="" selected disabled>학위 선택</option>
                        <c:forEach var="acdeSeCd" items="${acdeList}">
                            <option value="${acdeSeCd.comCode}">${acdeSeCd.comCodeNm}</option>
                        </c:forEach>
                    </select>
                </div>    
                <div>
                    <label for="acbgMjrNm">전공*</label><br>
                    <input id="acbgMjrNm" name="acbgMjrNm" class="add" type="text" placeholder="예) 컴퓨터 공학과"/><br>
                </div>                        
            `;
        }
    });

    // 취소 버튼에 클릭 이벤트를 추가하여 해당 요소를 삭제
    $(newElement).find('#cancelAcbglAjax').on('click', function() {
        $(newElement).remove();
    });
}


$(function() {
    // 학력 추가 버튼 클릭 시 필수값 체크
    $(document).on("click", "#addAcbgAjax", function() {    	
    	//로그인 아이디(memVO == priVO(JSTL변수))
        var mbrId = "${priVO.mbrId}";
        //학교구분
        //1. 대학교, 2. 고등학교
        var prseSeCd = $('#prseSeCd').val();
        //학교
        var acbgSchlNm = $('#acbgSchlNm').val();
        //학위(1. 대학교)
        var acdeSeCd = $('#acdeSeCd').val();
        //전공(1. 대학교)
        var acbgMjrNm = $('#acbgMjrNm').val();
        //전공계열(2. 고등학교)
        var acspSeCd = $('#acspSeCd').val();
        var acbgMtcltnym = $('#acbgMtcltnym').val();
        var acbgGrdtnym = $('#acbgGrdtnym').val();

        let data = {
                "mbrId":mbrId,
                "prseSeCd":prseSeCd,
                "acbgSchlNm":acbgSchlNm,
                "acdeSeCd":acdeSeCd, 
                "acspSeCd":acspSeCd,
                "acbgMjrNm":acbgMjrNm,
                "acbgMtcltnym":acbgMtcltnym,
                "acbgGrdtnym":acbgGrdtnym
            };
        
        //오브젝트는 ,
        /*
        {
		    "mbrId": "test1",
		    "prseSeCd": "PRSE01",
		    "acbgSchlNm": "1",
		    "acdeSeCd": "ACDE01",
		    "acbgMjrNm": "대덕인재대학교",
		    "acbgMtcltnym": "3",
		    "acbgGrdtnym": "5"
		}
        */
        console.log("data : ", data);
        
        $.ajax({
            url: '/member/acbgAddAjax',
            contentType: 'application/json;charset=utf-8',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(data),
            beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
            success: function(result) {
                alert('학력 추가가 성공적으로 완료되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
            },
            error: function(xhr, status, error) {
                alert('학력 추가를 실패했습니다.');
            }
        });
    });
    
 //--------------------------------- 학력 수정 실행
    $(document).on("click", ".editAcbgAjax", function() {
    	

    var acbgItem = $(this).closest('.acbg-item');
    var mbrId = $('input[name="mbrId"]').val();
    var acbgNo = acbgItem.find('input[name="acbgNo"]').val(); 
    var prseSeCd = acbgItem.find('select[name="prseSeCd"]').val();  	     // 학교 구분 코드 *
    var acbgSchlNm = acbgItem.find('input[name="acbgSchlNm"]').val();      // 학교 명 *
    var acbgMjrNm = acbgItem.find('input[name="acbgMjrNm"]').val();  	     // 전공명(대학교)
    var acbgMtcltnym = acbgItem.find('input[name="acbgMtcltnym"]').val();  // 입학연월 *
    var acbgGrdtnym = acbgItem.find('input[name="acbgGrdtnym"]').val();    // 졸업연월*
    var acspSeCd = acbgItem.find('select[name="acspSeCd"]').val();  		//  전공계열 구분 코드(고등학교)
    var acdeSeCd = acbgItem.find('select[name="acdeSeCd"]').val();  		//  학위 구분 코드(대학교)

	console.log("acbgNo",acbgNo);

    const editFormHtml = `
    	<form name="edit_ACForm" id="edit_ACForm" action="/member/acbgUpdateAjax" method="post">
        <div id="editACForm">
            <h5 style="width:240px;">학력 수정</h5>
            <br>
            <input name="acbgNo" class="add" type="hidden"/>
            <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
            <div id="schoolBox">
                <div style="margin-right:10px;">
                    <label for="prseSeCd">학교구분<span class="required">*</span></label><br>
                    <select name="prseSeCd" id="prseSeCd">
                        <option value="" selected disabled>학교 구분 선택</option>
                        <c:forEach var="prseSeCd" items="${prseList}">
                            <option value="${prseSeCd.comCode}">${prseSeCd.comCodeNm}</option>
                        </c:forEach>
                    </select>
                </div>
                <div>
                    <label for="acbgSchlNm">학교<span class="required">*</span></label><br>
                    <input id="acbgSchlNm" name="acbgSchlNm" class="add" type="text"/><br>
                </div>
            </div>
            <br>
            <div id="spcBox">
                <div style="margin-right:10px;">
                    <label for="acdeSeCd">학위<span class="required">*</span></label><br>
                    <select name="acdeSeCd" id="acdeSeCd">
	                    <option value="" selected disabled>학위 선택</option>
		                    <c:forEach var="acdeSeCd" items="${acdeList}">
		                        <option value="${acdeSeCd.comCode}"${acdeSeCd.comCodeNm}</option>
		                    </c:forEach>
                	</select>
                </div>    
                <div>
                    <label for="acbgMjrNm">전공<span class="required">*</span></label><br>
                    <input id="acbgMjrNm" name="acbgMjrNm" class="add" type="text"/><br>
                </div>                        
            </div>  
            <br>
            <label for="acbgMtcltnym">재학 기간<span class="required">*</span></label>
            <div style="display: flex; width: 110px">
                <input name="acbgMtcltnym" id="acbgMtcltnym" class="add" type="text"/>
                <p style="margin: 0px 10px 0px 10px;">-</p>
                <input name="acbgGrdtnym" id="acbgGrdtnym" type="text" class="add" placeholder="졸업연월"/><br>
            </div>
            <div style="display: flex; justify-content: flex-end;">
	            <input id="cancelAcbgAjax" type="button" value="취소"/>
	            <input id="updateAcbgAjax" type="button" value="저장"/>
        	</div>
        </div> 
        <sec:csrfInput />
    </form>      
	`;
	
    // 기존 학력 항목을 수정 폼으로 교체
    acbgItem.html(editFormHtml);
    
    // 폼 필드에 값을 명시적으로 설정
    $('input[name="mbrId"]').val(mbrId);
    $('input[name="acbgNo"]').val(acbgNo);
    $('select[name="prseSeCd"]').val(prseSeCd);			// 학교 구분 코드 *
    $('input[name="acbgSchlNm"]').val(acbgSchlNm);		// 학교 명 *
    $('input[name="acbgMjrNm"]').val(acbgMjrNm);		// 전공명(대학교)
    $('input[name="acbgMtcltnym"]').val(acbgMtcltnym);  // 입학연월 *
    $('input[name="acbgGrdtnym"]').val(acbgGrdtnym);	// 졸업연월*
    $('select[name="acspSeCd"]').val(acspSeCd);			//  전공계열 구분 코드(고등학교)
    $('select[name="acdeSeCd"]').val(acdeSeCd);			//  학위 구분 코드(대학교)

    // 취소 버튼 클릭 시 원래 목록으로 복원
    $('#cancelAcbgAjax').on('click', function() {
        location.reload(); 
    });
    
    $("#updateAcbgAjax").on("click",function(){
    	let data = {
    			"acbgNo": acbgNo,
   	            "mbrId": mbrId,
   	            "prseSeCd": $('select[name="prseSeCd"]').val(),
   	            "acbgSchlNm": $('input[name="acbgSchlNm"]').val(),
   	            "acbgMjrNm": $('input[name="acbgMjrNm"]').val(),
   	            "acbgMtcltnym": $('input[name="acbgMtcltnym"]').val().replaceAll('.',''),
   	            "acbgGrdtnym": $('input[name="acbgGrdtnym"]').val().replaceAll('.',''),
   	            "acspSeCd": $('select[name="acspSeCd"]').val(),
   	            "acdeSeCd": $('select[name="acdeSeCd"]').val()
    	}
    	
    	$.ajax({
    		url:"/member/acbgUpdateAjax",
    		contentType:"application/json;charset=utf-8",
    		data:JSON.stringify(data),
    		type:"post",
    		dataType:"json",
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
    			alert("수정이 완료되었습니다.");
    			location.reload();
    		},
    		error:function(xhr,status,error){
    			alert("수정 실패");
    		}
	    })
    })
});

    
    
//--------------------------------- 학력 삭제
	$(document).on("click", ".delAcbgAjax", function() {
		
	    if (!confirm("해당 학력내역을 삭제하시겠습니까?")) {
	        return;  
	    }
	    
    var acbgNo = $(this).closest(".acbg-item").find("input[name='acbgNo']").val();
    var mbrId = $(this).closest(".acbg-item").find("input[name='mbrId']").val();
    	
    let data={
            "mbrId": mbrId,
            "acbgNo":acbgNo
    }
    	$.ajax({
    		url:'/member/acbgDelAjax',
    		contentType:'application/json',
    		data:JSON.stringify(data),
    		type:'POST',
    		dataType:'json',
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
                alert('학력이 삭제되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
    		},
    		error: function(xhr, status, error) {
                alert('삭제를 실패했습니다.');
            }
    		
    		
    	})
    });
    
});
</script>
<script>
//--------------------------------- 수상 추가
function addWnpz() {
    // 추가할 <div> 요소 생성
    const newElement = document.createElement('div');

    // <div> 요소 안에 html 요소 추가
	newElement.innerHTML = `
              <form name="add_WnpzForm" id="add_WnpzForm" action="/member/WnpzAddAjax" method="post">
              <div id="addWnpzForm">
                 <h5 style="margin-left : -70px;">수상 추가</h5>
                 <br>
                 <input name="wnpzNo" class="del" type="hidden"/>
                 <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
                 
                 <label for="wnpzCntstNm">수상명<span class="required">*</span></label><input name="wnpzCntstNm" class="add carInp" type="text" placeholder="예) 유니버셜디자인 공모전 특선"/><br>
                 
                 <label for="wnpzAuspcengn">주최기관<span class="required">*</span></label><input name="wnpzAuspcengn" class="add carInp"  type="text" placeholder="예) 한국장애인인권포럼"/><br>
                 
                 <label for="wnpzPssrpYm">취득일자<span class="required">*</span></label>
                 <div style="display: flex; width: 110px">
                    <input name="wnpzPssrpYm" id="wnpzPssrpYm" class="add" type="text" placeholder="예) 202108"/>
                 </div>                
	             	<div style="display: flex; justify-content: flex-end;">
                    <input id="cancelWnpzAjax" type="reset" value="취소"/><input id="addWnpzAjax" type="button" value="저장"/>
                 </div>
                 <hr style="width : 796px; margin-left: -70px;">
              </div> 
              <sec:csrfInput />
           </form>      
           `;
      
           
    // 생성된 <div> 요소를 추가할 부모요소(container div) 선택
    const container = document.getElementById('wnpzBox');
    const firstChild = container.firstChild;

    // 생성된 <div> 요소를 기존의 container div에 자식 요소로 추가
    container.insertBefore(newElement, firstChild);  

    // 취소 버튼에 클릭 이벤트를 추가하여 해당 요소를 삭제
    $(newElement).find('#cancelWnpzAjax').on('click', function() {
        $(newElement).remove();
    });

}

$(function() {
    // 동적으로 추가된 수상 추가 버튼에 이벤트 연결 (이벤트 위임 사용)
    $(document).on("click", "#addWnpzAjax", function() {
        var mbrId = $('input[name="mbrId"]').val();
        var wnpzCntstNm = $('input[name="wnpzCntstNm"]').val();
        var wnpzAuspcengn = $('input[name="wnpzAuspcengn"]').val();
        var wnpzPssrpYm = $('input[name="wnpzPssrpYm"]').val();

        if (!wnpzCntstNm || !wnpzAuspcengn || !wnpzPssrpYm) {
            alert("필수 항목을 모두 입력해주세요.");
            return;
        }
        
        let data={
                "mbrId": mbrId,
                "wnpzCntstNm": wnpzCntstNm,
                "wnpzAuspcengn": wnpzAuspcengn,
                "wnpzPssrpYm": wnpzPssrpYm
        }

        $.ajax({
            url: '/member/WnpzAddAjax', 
            contentType: 'application/json',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(data),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(result) {
            	console.log("result", result)
                alert('수상 추가가 성공적으로 완료되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
            },
            error: function(xhr, status, error) {
            	console.error("추가 실패 : ", error)
                alert('수상 추가를 실패했습니다.');
            }
        });
    });
    
    //--------------------------------- 수상 수정
    $(document).on("click", ".updateWnpzAjax", function() {

    var wnpzItem = $(this).closest('.wnpz-item');
    var mbrId = $('input[name="mbrId"]').val();
    var wnpzNo = wnpzItem.find('input[name="wnpzNo"]').val(); 					// 수상번호
    var wnpzCntstNm = wnpzItem.find('input[name="wnpzCntstNm"]').val(); 		// 수상명
    var wnpzAuspcengn = wnpzItem.find('input[name="wnpzAuspcengn"]').val();  	// 주최기관
    var wnpzPssrpYm = wnpzItem.find('input[name="wnpzPssrpYm"]').val();  		// 시작일자

    const editFormHtml = `
        <form name="edit_WnpzForm" id="edit_WnpzForm" wnpzion="/member/wnpzUpdateAjax" method="post">
            <div id="editWNPZForm">
		    	  <h5 style="width:240px;">수상 수정</h5>
		        <br>
		        <input name="wnpzNo" class="del" type="hidden"/>
		        <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
		        
		        <label for="wnpzCntstNm">수상명<span class="required">*</span></label><input name="wnpzCntstNm" class="add carInp" type="text"/><br>
		        
		        <label for="wnpzAuspcengn">주최기관<span class="required">*</span></label><input name="wnpzAuspcengn" class="add carInp" type="text"/><br>
		        
		        <label for="wnpzPssrpYm">취득연월<span class="required">*</span></label>
		        <div style="display: flex; width: 110px">
		            <input name="wnpzPssrpYm" id="wnpzPssrpYm" class="add" type="text" placeholder="예) 202108"/>
		            <p style="margin: 0px 10px 0px 10px;">
		        </div>  
		        <br>
		        	<div style="display: flex; justify-content: flex-end;">
		           <input id="cancelWnpzAjax" type="button" value="취소"/><input id="updateWnpzAjax" type="button" value="저장"/>
		        </div>
		     </div> 
		     <sec:csrfInput />
		  </form>      
    `;

    // 기존 수상 항목을 수정 폼으로 교체
    wnpzItem.html(editFormHtml);
    
    // 폼 필드에 값을 명시적으로 설정
    $('input[name="mbrId"]').val(mbrId);				// 회원아이디
    $('input[name="wnpzNo"]').val(wnpzNo);				// 수상번호
    $('input[name="wnpzCntstNm"]').val(wnpzCntstNm);	// 수상명
    $('input[name="wnpzAuspcengn"]').val(wnpzAuspcengn);// 주최기관
    $('input[name="wnpzPssrpYm"]').val(wnpzPssrpYm);	// 취득연월

    // 취소 버튼 클릭 시 원래 목록으로 복원
    $('#cancelWnpzAjax').on('click', function() {
        location.reload(); 
    });
    
    $("#updateWnpzAjax").on("click",function(){
    	let data = {
    			"wnpzNo": wnpzNo,
   	            "mbrId": mbrId,
   	            "wnpzCntstNm": $('input[name="wnpzCntstNm"]').val(),
   	            "wnpzAuspcengn": $('input[name="wnpzAuspcengn"]').val(),
   	            "wnpzPssrpYm": $('input[name="wnpzPssrpYm"]').val().replaceAll('.','')
    	}
    	
    	$.ajax({
    		url:"/member/wnpzUpdateAjax",
    		contentType:"application/json;charset=utf-8",
    		data:JSON.stringify(data),
    		type:"post",
    		dataType:"json",
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
    			alert("수정이 완료되었습니다.");
    			location.reload();
    		},
    		error:function(xhr,status,error){
    			alert("수정 실패");
    		}
	    })
    })
    
});    
    
    
//--------------------------------- 수상 삭제
	$(document).on("click", ".DelWnpzAjax", function() {
		console.log("mbrId",mbrId);
		console.log("wnpzNo",wnpzNo);
	    if (!confirm("해당 수상내역을 삭제하시겠습니까?")) {
	        return;  
	    }
	    
    var wnpzNo = $(this).closest(".wnpz-item").find("input[name='wnpzNo']").val();
    var mbrId = $(this).closest(".wnpz-item").find("input[name='mbrId']").val();
    	let data={
                "mbrId": mbrId,
                "wnpzNo":wnpzNo
    	}
    	$.ajax({
    		url:'/member/WnpzDelAjax',
    		contentType:'application/json',
    		data:JSON.stringify(data),
    		type:'POST',
    		dataType:'json',
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
                alert('수상이 삭제되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
    		},
    		error: function(xhr, status, error) {
                alert('삭제를 실패했습니다.');
            }
    		
    		
    	})
    })
    
});


</script>
<script>
//--------------------------------- 활동 추가
function addAct() {
    // 추가할 <div> 요소 생성
    const newElement = document.createElement('div');

    // <div> 요소 안에 html 요소 추가
	newElement.innerHTML = `
              <form name="add_ActForm" id="add_ActForm" action="/member/actAddAjax" method="post">
              <div id="addActForm">
                 <h5 style="margin-left : -70px;">활동 추가</h5>
                 <br>
                 <input name="actNo" class="del" type="hidden"/>
                 <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
                 
                 <label for="actNm">활동명<span class="required">*</span></label><input name="actNm" class="add carInp" type="text" placeholder="예) Highthon(하이톤)브랜딩"/><br>
                 
                 <label for="actAuspcengn">주최기관<span class="required">*</span></label><input name="actAuspcengn" class="add carInp"  type="text" placeholder="예) Highthon"/><br>
                 
                 <label for="actBeginYm">활동 일자<span class="required">*</span></label>
                 <div style="display: flex; width: 110px">
                     <input name="actBeginYm" id="actBeginYm" class="add" type="text" placeholder="예) 202108"/>
                     <p style="margin: 0px 10px 0px 10px;">-</p>
                     <input name="actEndYm" id="actEndYm" type="text" class="add" placeholder="종료일자"/><br>
                 </div>  
                 <br>
                 <div>
                   <label for="actNc">간단 활동 설명<span class="required">*</span></label><br>
             		<textarea rows="2" cols="66" id="actNc" name="actNc"></textarea>
                 </div>
	             	<div style="display: flex; justify-content: flex-end;">
                    <input id="cancelActAjax" type="reset" value="취소"/><input id="addActAjax" type="button" value="저장"/>
                 </div>
                 
                 <hr style="width : 796px; margin-left: -70px;">
              </div> 
              <sec:csrfInput />
           </form>      
           `;
      
           
    // 생성된 <div> 요소를 추가할 부모요소(container div) 선택
    const container = document.getElementById('actBox');
    const firstChild = container.firstChild;

    // 생성된 <div> 요소를 기존의 container div에 자식 요소로 추가
    container.insertBefore(newElement, firstChild);  

    // 취소 버튼에 클릭 이벤트를 추가하여 해당 요소를 삭제
    $(newElement).find('#cancelActAjax').on('click', function() {
        $(newElement).remove();
    });

}

$(function() {
    // 동적으로 추가된 경력 추가 버튼에 이벤트 연결 (이벤트 위임 사용)
    $(document).on("click", "#addActAjax", function() {
        var mbrId = $('input[name="mbrId"]').val();
        var actNm = $('input[name="actNm"]').val();
        var actAuspcengn = $('input[name="actAuspcengn"]').val();
        var actBeginYm = $('input[name="actBeginYm"]').val();
        var actEndYm = $('input[name="actEndYm"]').val();
        var actNc = $('textarea[name="actNc"]').val();

        if (!actNm || !actAuspcengn || !actBeginYm || !actEndYm || !actNc) {
            alert("필수 항목을 모두 입력해주세요.");
            return;
        }
        let data={
                "mbrId": mbrId,
                "actNm": actNm,
                "actAuspcengn": actAuspcengn,
                "actBeginYm": actBeginYm,
                "actEndYm": actEndYm,
                "actNc": actNc
        }
        

        $.ajax({
            url: '/member/actAddAjax', 
            contentType: 'application/json',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(data),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(result) {
            	console.log("result", result)
                alert('활동 추가가 성공적으로 완료되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
            },
            error: function(xhr, status, error) {
            	console.error("추가 실패 : ", error)
                alert('활동 추가를 실패했습니다.');
            }
        });
    });
    
  //--------------------------------- 활동 수정
    $(document).on("click", ".updateActAjax", function() {

    var actItem = $(this).closest('.act-item');
    var mbrId = $('input[name="mbrId"]').val();
    var actNo = actItem.find('input[name="actNo"]').val(); 					// 활동번호
    var actNm = actItem.find('input[name="actNm"]').val(); 					// 활동명
    var actAuspcengn = actItem.find('input[name="actAuspcengn"]').val();  	// 주최기관
    var actBeginYm = actItem.find('input[name="actBeginYm"]').val();  		// 시작일자
    var actEndYm = actItem.find('input[name="actEndYm"]').val();  			// 종료일자
    var actNc = actItem.find('textarea[name="actNc"]').val();  				// 활동 설명

    const editFormHtml = `
        <form name="edit_ACTForm" id="edit_ACTForm" action="/member/actUpdateAjax" method="post">
            <div id="editACTForm">
		    	  <h5 style="width:240px;">활동 수정</h5>
		        <br>
		        <input name="actNo" class="del" type="hidden"/>
		        <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
		        
		        <label for="actNm">활동명<span class="required">*</span></label><input name="actNm" class="add carInp" type="text"/><br>
		        
		        <label for="actAuspcengn">주최기관<span class="required">*</span></label><input name="actAuspcengn" class="add carInp" type="text"/><br>
		        
		        <label for="actBeginYm">활동 일자<span class="required">*</span></label>
		        <div style="display: flex; width: 110px">
		            <input name="actBeginYm" id="actBeginYm" class="add" type="text" placeholder="예) 202108"/>
		            <p style="margin: 0px 10px 0px 10px;">-</p>
		            <input name="actEndYm" id="actEndYm" type="text" class="add" placeholder="종료일자"/><br>
		        </div>  
		        <br>
		        <div>
		          <label for="actNc">간단 활동 설명<span class="required">*</span></label><br>
		    		<textarea rows="2" cols="66" id="actNc" name="actNc"></textarea>
		        </div>
		        	<div style="display: flex; justify-content: flex-end;">
		           <input id="cancelActAjax" type="button" value="취소"/><input id="updateActAjax" type="button" value="저장"/>
		        </div>
		     </div> 
		     <sec:csrfInput />
		  </form>      
    `;

    // 기존 활동 항목을 수정 폼으로 교체
    actItem.html(editFormHtml);
    
    // 폼 필드에 값을 명시적으로 설정
    $('input[name="mbrId"]').val(mbrId);
    $('input[name="actNo"]').val(actNo);
    $('input[name="actNm"]').val(actNm);
    $('input[name="actAuspcengn"]').val(actAuspcengn);
    $('input[name="actBeginYm"]').val(actBeginYm);
    $('input[name="actEndYm"]').val(actEndYm);
	$('textarea[name="actNc"]').val(actNc);

    // 취소 버튼 클릭 시 원래 목록으로 복원
    $('#cancelActAjax').on('click', function() {
        location.reload(); 
    });
    
    $("#updateActAjax").on("click",function(){
    	let data = {
    			"actNo": actNo,
   	            "mbrId": mbrId,
   	            "actNm": $('input[name="actNm"]').val(),
   	            "actAuspcengn": $('input[name="actAuspcengn"]').val(),
   	            "actBeginYm": $('input[name="actBeginYm"]').val().replaceAll('.',''),
   	            "actEndYm": $('input[name="actEndYm"]').val().replaceAll('.',''),
				"actNc": $('textarea[name="actNc"]').val()
    	}
    	
    	$.ajax({
    		url:"/member/actUpdateAjax",
    		contentType:"application/json;charset=utf-8",
    		data:JSON.stringify(data),
    		type:"post",
    		dataType:"json",
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
    			alert("수정이 완료되었습니다.");
    			location.reload();
    		},
    		error:function(xhr,status,error){
    			alert("수정 실패");
    		}
	    })
    })
    
});    
    
    
//--------------------------------- 활동 삭제
	$(document).on("click", ".DelActAjax", function() {
		
	    if (!confirm("해당 활동내역을 삭제하시겠습니까?")) {
	        return;  
	    }
	    
    var actNo = $(this).closest(".act-item").find("input[name='actNo']").val();
    var mbrId = $(this).closest(".act-item").find("input[name='mbrId']").val();
    	
    let data={
            "mbrId": mbrId,
            "actNo":actNo
    }
    	$.ajax({
    		url:'/member/actDelAjax',
    		contentType:'application/json',
    		data:JSON.stringify(data),
    		type:'POST',
    		dataType:'json',
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
                alert('활동이 삭제되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
    		},
    		error: function(xhr, status, error) {
                alert('삭제를 실패했습니다.');
            }
    		
    		
    	})
    })
    
});

</script>
<script>
//--------------------------------- 자격증 추가
function addCrtfct() {
    // 추가할 <div> 요소 생성
    const newElement = document.createElement('div');

    // <div> 요소 안에 html 요소 추가
	newElement.innerHTML = `
					<form name="add_CrtForm" id="add_CrtForm" action="/member/crtfctAddAjax" method="post">
				        <div id="addCrtForm">
				           <h5 style="margin-left:-60px;">자격증 추가</h5>
				           <br>
				           <input name="crtfctNo" class="del" type="hidden"/>
				           <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
				           <div style="margin-left: -25px;">
					           <label class="slabel" for="crtfctNm">자격증명<span class="required">*</span></label><input name="crtfctNm" class="add crtInp" type="text" placeholder="예) 정보처리기사"/><br>
					           <br>
					           <label class="slabel" for="crtfctPblcnoffic">주최기관<span class="required">*</span></label><input name="crtfctPblcnoffic" class="add crtInp"  type="text" placeholder="예) Qnet"/><br>
					           <br>
					           <label class="slabel" for="crtfctAcqsDate">취득 일자<span class="required">*</span></label>
					           <div style="display: flex; width: 110px">
					               <input name="crtfctAcqsDate" id="crtfctAcqsDate" class="add" type="text" placeholder="예) 202108"/>
					           </div>  
				           </div>
				           	<div style="margin-left: 90px; margin-top: 26px;">
				              <input id="cancelCrtAjax" type="reset" value="취소"/><input id="addCrtAjax" type="button" value="저장"/>
				           </div>
				           
				           <hr style="width: 320px; margin-left: -75px;">
				        </div> 
				        <sec:csrfInput />
			     </form>   
           `;
      
           
    // 생성된 <div> 요소를 추가할 부모요소(container div) 선택
    const container = document.getElementById('crtfctBox');
    const firstChild = container.firstChild;

    // 생성된 <div> 요소를 기존의 container div에 자식 요소로 추가
    container.insertBefore(newElement, firstChild);  

    // 취소 버튼에 클릭 이벤트를 추가하여 해당 요소를 삭제
    $(newElement).find('#cancelCrtAjax').on('click', function() {
        $(newElement).remove();
    });

}
$(function() {
    // 동적으로 추가된 경력 추가 버튼에 이벤트 연결 (이벤트 위임 사용)
    $(document).on("click", "#addCrtAjax", function() {
        var mbrId = $('input[name="mbrId"]').val();
        var crtfctNm = $('input[name="crtfctNm"]').val();
        var crtfctPblcnoffic = $('input[name="crtfctPblcnoffic"]').val();
        var crtfctAcqsDate = $('input[name="crtfctAcqsDate"]').val();

        if (!crtfctNm || !crtfctPblcnoffic || !crtfctAcqsDate) {
            alert("필수 항목을 모두 입력해주세요.");
            return;
        }
        
        let data={
        		 "mbrId": mbrId,
                 "crtfctNm": crtfctNm,
                 "crtfctPblcnoffic": crtfctPblcnoffic,
                 "crtfctAcqsDate": crtfctAcqsDate
        }
        
        $.ajax({
            url: '/member/crtfctAddAjax', 
            contentType: 'application/json',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(data),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(result) {
            	console.log("result", result)
                alert('자격증 추가가 성공적으로 완료되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
            },
            error: function(xhr, status, error) {
            	console.error("추가 실패 : ", error)
                alert('자격증 추가를 실패했습니다.');
            }
        });
    });
    
  //--------------------------------- 자격증 수정
    $(document).on("click", ".updateCrtfctAjax", function() {

    var crtfctItem = $(this).closest('.crtfct-item');
    var mbrId = $('input[name="mbrId"]').val();
    var crtfctNo = crtfctItem.find('input[name="crtfctNo"]').val(); 				// 자격증번호
    var crtfctNm = crtfctItem.find('input[name="crtfctNm"]').val(); 			    // 자격증명
    var crtfctPblcnoffic = crtfctItem.find('input[name="crtfctPblcnoffic"]').val(); // 발행처
    var crtfctAcqsDate = crtfctItem.find('input[name="crtfctAcqsDate"]').val();  		// 시작일자

    const editFormHtml = `
        <form name="edit_CRTForm" id="edit_CRTForm" crtfction="/member/crtfctUpdateAjax" method="post">
            <div id="editCRTForm">
		    	  <h5 style="margin-left:-60px;">자격증 수정</h5>
		        <br>
		        <input name="crtfctNo" class="del" type="hidden"/>
		        <input name="mbrId" class="add" type="hidden" value="${priVO.mbrId}"/>
		        
		        <div style="margin-left: -25px;">
					   <label class="slabel" for="crtfctNm">자격증명<span class="required">*</span></label><input name="crtfctNm" class="add crtInp" type="text" placeholder="예) 정보처리기사"/><br>
					   <br>
					   <label class="slabel" for="crtfctPblcnoffic">발행처<span class="required">*</span></label><input name="crtfctPblcnoffic" class="add crtInp"  type="text" placeholder="예) Qnet"/><br>
					   <br>
					   <label class="slabel" for="crtfctAcqsDate">취득 일자<span class="required">*</span></label>
					   <div style="display: flex; width: 110px">
						   <input name="crtfctAcqsDate" id="crtfctAcqsDate" class="add" type="text" placeholder="예) 202108"/>
					   </div>  
				</div>	   
				<div style="margin-left: 70px; margin-top: 26px;">
					<input id="cancelCrtfctAjax" type="button" value="취소"/><input id="updateCrtfctAjax" type="button" value="저장"/>
			    </div>
		 </div> 
		 <sec:csrfInput />
	  </form>      
    `;

    // 기존 자격증 항목을 수정 폼으로 교체
    crtfctItem.html(editFormHtml);
    
    // 폼 필드에 값을 명시적으로 설정
    $('input[name="mbrId"]').val(mbrId);				       // 회원아이디
    $('input[name="crtfctNo"]').val(crtfctNo);				   // 자격증번호
    $('input[name="crtfctNm"]').val(crtfctNm);				   // 자격증명
    $('input[name="crtfctPblcnoffic"]').val(crtfctPblcnoffic); // 발행처
    $('input[name="crtfctAcqsDate"]').val(crtfctAcqsDate);	   // 취득연월

    // 취소 버튼 클릭 시 원래 목록으로 복원
    $('#cancelCrtfctAjax').on('click', function() {
        location.reload(); 
    });
    
    $("#updateCrtfctAjax").on("click",function(){
    	let data = {
    			"crtfctNo": crtfctNo,
   	            "mbrId": mbrId,
   	            "crtfctNm": $('input[name="crtfctNm"]').val(),
   	            "crtfctPblcnoffic": $('input[name="crtfctPblcnoffic"]').val(),
   	            "crtfctAcqsDate": $('input[name="crtfctAcqsDate"]').val().replaceAll('.','')
    	}
    	
    	$.ajax({
    		url:"/member/crtfctUpdateAjax",
    		contentType:"application/json;charset=utf-8",
    		data:JSON.stringify(data),
    		type:"post",
    		dataType:"json",
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
    			alert("수정이 완료되었습니다.");
    			location.reload();
    		},
    		error:function(xhr,status,error){
    			alert("수정 실패");
    		}
	    })
    })
    
});     
    
//--------------------------------- 자격증 삭제
	$(document).on("click", ".DelCrtAjax", function() {
		console.log("mbrId",mbrId);
		console.log("crtfctNo",crtfctNo);
		
	    if (!confirm("해당 자격증을 삭제하시겠습니까?")) {
	        return;  
	    }
	    
    var mbrId = $(this).closest(".crtfct-item").find("input[name='mbrId']").val();
    var crtfctNo = $(this).closest(".crtfct-item").find("input[name='crtfctNo']").val();
    	let data={
                "mbrId": mbrId,
                "crtfctNo":crtfctNo
    	}
    	$.ajax({
    		url:'/member/crtfctDelAjax',
    		contentType:'application/json',
    		data:JSON.stringify(data),
    		type:'POST',
    		dataType:'json',
    		beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
    		success:function(result){
    			console.log("result : ", result);
                alert('자격증이 삭제되었습니다.');
                location.reload();  // 등록 후 페이지 새로고침
    		},
    		error: function(xhr, status, error) {
                alert('삭제를 실패했습니다.');
            }
    		
    		
    	})
    })
    
});

</script> 
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->	 
<div class="content-wrapper">
	<div id="topPro">
		<br>
		<div id="nav">
			<img src="${priVO.fileDetailVOList[0].filePathNm}" alt="${priVO.fileDetailVOList[0].orgnlFileNm}" class="img"/>
<!-- 			<img alt="" src="../resources/images/member/토끼.jpg" class="img"> -->
		</div>
		<br>
		<p id="mbrNm">${priVO.mbrNm}</p>
		<input type="button" id="scout" value="스카우트" />
		<div id="introduce">
			<p>
				아르르르르릉ㄹ아르을으랑랑라알아라아아아아아아아아 자자잠잠자자자졸려 <br>가나가나가나가나다라마바사
			</p>
		</div>
		<hr>
		<div id="introduce2">
			<p>
				주요 경력 : <input type="text" value="${prfVO.careerNm}" readonly /><span
					class="material-symbols-outlined">edit</span>
			</p>
			<input style="margin-left: 330px;" type="text"
				value="${prfVO.proflContent}" readonly />
		</div>
	</div>

<div class="container">
	<div class="row">
		<div class="col-left">
			<div id="careerBox">
				<h5 style="margin-left: 20px;">경력</h5>
		<input class="tool edit" type="button" onclick="addCareer()" id="addBtn" value="+추가" /><br>

		<div id="career">
			<c:if test="${not empty prfCareerVOList}">
				<c:forEach var="careerVO" items="${prfCareerVOList}">
					<div class="career-item"
						style="border-bottom: 1px solid #ccc; padding-bottom: 10px; margin-bottom: 20px;">
						<!-- 제목과 아이콘을 flexbox로 우측 정렬 -->
						<div style="display: flex; justify-content: space-between; align-items: center;">
							<!-- 경력 번호 -->
							<input type="hidden" name="careerNo" value="${careerVO.careerNo}"/>
							<!-- 회원 아이디 -->
							<input type="hidden" name="mbrId" value="${careerVO.mbrId}"/>

							<!-- 경력 제목 -->
							<input type="text" class="edit-control title" name="careerNm"
								value="${careerVO.careerNm}" readonly style="flex: 1;">

							<!-- Edit/Delete 아이콘 -->
							<div style="display: flex; margin-right: -40px;">
								<span class="material-symbols-outlined edit editAjax">edit</span> 
								<span class="material-symbols-outlined edit delAjax">delete</span>
							</div>
						</div>

						<!-- 기업명 -->
						<input type="text" class="edit-control careerEnt" name="careerEnt"
							value="${careerVO.careerEnt}" readonly><br>

						<!-- 입사년도 -->
						<input type="text" class="edit-control careerBegYm" name="careerBegYm"
							value="${careerVO.careerBegYm.substring(0, 4)}.${careerVO.careerBegYm.substring(4, 6)}"
							readonly>-&nbsp;
						<!-- 퇴사년도가 없으면 "현재"로 표시 -->
						<c:choose>
							<c:when test="${empty careerVO.careerEndYm}">
								<input type="text" class="edit-control careerEndYm"
									value="현재" name="careerEndYm" readonly>
							</c:when>
							<c:otherwise>
								<input type="text" class="edit-control careerEndYm" name="careerEndYm"
									value="${careerVO.careerEndYm.substring(0, 4)}.${careerVO.careerEndYm.substring(4, 6)}"
									readonly>
							</c:otherwise>
						</c:choose>
						<br>
					</div>
				</c:forEach>
			</c:if>
		</div>
	</div>

<!-- ////////////////////////////////////////////////////////////////////////////////////// -->	
	<div id="acbgBox">
		<h5 style="margin-left: 20px;">학력</h5>
		<input class="tool edit" type="button" onclick="addAcbg()" id="addBtn" value="+추가" /><br>

		<div id="acbg">
			<c:if test="${not empty prfAcbgVOList}">
				<c:forEach var="acbgVO" items="${prfAcbgVOList}">
					<div class="acbg-item">
						<!-- 제목과 아이콘을 flexbox로 우측 정렬 -->
						<div style="display: flex; justify-content: space-between; align-items: center;">
							<!-- 학력 번호 -->
							<input type="hidden" name="acbgNo" value="${acbgVO.acbgNo}"/>
							<input type="hidden" name="prseSeCd" value="${acbgVO.prseSeCd}"/>
							
							<!-- 회원 아이디 -->
							<input type="hidden" name="mbrId" value="${acbgVO.mbrId}"/>
							
							<!-- 학교 명 -->
							<input type="text" class="edit-control title" name="acbgSchlNm"
								value="${acbgVO.acbgSchlNm}" readonly style="flex: 1;">

							<!-- Edit/Delete 아이콘 -->
							<div style="display: flex; margin-right: -40px;">
								<span class="material-symbols-outlined edit editAcbgAjax">edit</span> 
								<span class="material-symbols-outlined edit delAcbgAjax">delete</span>
							</div>
						</div>

						<!-- 전공명 -->
						<input type="text" class="edit-control acbgMjrNm" name="acbgMjrNm"
							value="${acbgVO.acbgMjrNm}(${acbgVO.acdeSeNm})" readonly><br>

						<!-- 입학년도 -->
						<input type="text" class="edit-control acbgMtcltnym" name="acbgMtcltnym"
							value="${acbgVO.acbgMtcltnym.substring(0, 4)}.${acbgVO.acbgMtcltnym.substring(4, 6)}"
							readonly>-&nbsp;
						<!-- 졸업년도 -->
						<input type="text" class="edit-control acbgGrdtnym" name="acbgGrdtnym"
							value="${acbgVO.acbgGrdtnym.substring(0, 4)}.${acbgVO.acbgGrdtnym.substring(4, 6)}"
							readonly>
						<br>
					</div>
				</c:forEach>
			</c:if>
		</div>
	</div>
	
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->			
	<div id="actBox">
		<h5 style="margin-left: 20px;">활동</h5>
		<input class="tool edit" type="button" onclick="addAct()" id="addBtn" value="+추가" /><br>

		<div id="act">
			<c:if test="${not empty prfActVOList}">
				<c:forEach var="actVO" items="${prfActVOList}">
					<div class="act-item">
						<!-- 제목과 아이콘을 flexbox로 우측 정렬 -->
						<div style="display: flex; justify-content: space-between; align-items: center;">
							<!-- 활동 번호 -->
							<input type="hidden" name="actNo" value="${actVO.actNo}"/>
							
							<!-- 회원 아이디 -->
							<input type="hidden" name="mbrId" value="${actVO.mbrId}"/>
							
							<!-- 활동 명 -->
							<input type="text" class="edit-control title" name="actNm"
								value="${actVO.actNm}" readonly style="flex: 1;">

							<!-- Edit/Delete 아이콘 -->
							<div style="display: flex; margin-right: -40px;">
								<span class="material-symbols-outlined edit updateActAjax">edit</span> 
								<span class="material-symbols-outlined edit DelActAjax">delete</span>
							</div>
						</div>

						<!-- 주최기관 -->
						<input type="text" class="edit-control actAuspcengn" name="actAuspcengn"
							value="${actVO.actAuspcengn}" readonly><br>

						<!-- 시작일자 -->
						<input type="text" class="edit-control actBeginYm" name="actBeginYm"
							value="${actVO.actBeginYm.substring(0, 4)}.${actVO.actBeginYm.substring(4, 6)}"
							readonly>-&nbsp;
						<!-- 종료일자 -->
						<input type="text" class="edit-control actEndYm" name="actEndYm"
							value="${actVO.actEndYm.substring(0, 4)}.${actVO.actEndYm.substring(4, 6)}"
							readonly>
						<br>
						<!-- 활동 설명 -->
						<textarea class="edit-control actNc" name="actNc" readonly>${actVO.actNc}</textarea>
						<br>
					</div>
				</c:forEach>
			</c:if>
		</div>
	</div>
	
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->		
	<div id="wnpzBox">
		<h5 style="margin-left: 20px;">수상</h5>
		<input class="tool edit" type="button" onclick="addWnpz()" id="addBtn" value="+추가" /><br>

		<div id="act">
			<c:if test="${not empty prfWnpzVOList}">
				<c:forEach var="wnpzVO" items="${prfWnpzVOList}">
					<div class="wnpz-item">
						<!-- 제목과 아이콘을 flexbox로 우측 정렬 -->
						<div style="display: flex; justify-content: space-between; align-items: center;">
							<!-- 수상 번호 -->
							<input type="hidden" name="wnpzNo" value="${wnpzVO.wnpzNo}"/>
							
							<!-- 회원 아이디 -->
							<input type="hidden" name="mbrId" value="${wnpzVO.mbrId}"/>
							
							<!-- 수상 명 -->
							<input type="text" class="edit-control title" name="wnpzCntstNm"
								value="${wnpzVO.wnpzCntstNm}" readonly style="flex: 1;">

							<!-- Edit/Delete 아이콘 -->
							<div style="display: flex; margin-right: -40px;">
								<span class="material-symbols-outlined edit updateWnpzAjax">edit</span> 
								<span class="material-symbols-outlined edit DelWnpzAjax">delete</span>
							</div>
						</div>

						<!-- 주최기관 -->
						<input type="text" class="edit-control wnpzAuspcengn" name="wnpzAuspcengn"
							value="${wnpzVO.wnpzAuspcengn}" readonly><br>

						<!-- 취득년도 -->
						<input type="text" class="edit-control wnpzPssrpYm" name="wnpzPssrpYm"
							value="${wnpzVO.wnpzPssrpYm.substring(0, 4)}.${wnpzVO.wnpzPssrpYm.substring(4, 6)}" readonly>
						<br>
					</div>
				</c:forEach>
			</c:if>
		</div>
	</div>
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->	
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->		
			</div>
			<div class="col-right">
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->				
				<div id="businessBox">
					<h5>스킬</h5>
					<div id="business">
						<p>${prfBusinessVOList}</p>
					</div>
				</div>
				
<!-- ////////////////////////////////////////////////////////////////////////////////////// -->					
				<div id="crtfctBox">
               <h5 style="margin-left:15px;">자격증</h5>
               <input class="tool2 edit" type="button" onclick="addCrtfct()" id="addBtn" value="+추가" />
               <div id="crtfct">
                  <c:if test="${not empty prfCrtfctVOList}">
                     <c:forEach var="crtfctVO" items="${prfCrtfctVOList}">
                        <div class="crtfct-item">
                           <!-- 자격 번호 -->
                           <input type="hidden" name="crtfctNo" value="${crtfctVO.crtfctNo}"/>
                           <!-- 회원 아이디 -->
                           <input type="hidden" name="mbrId" value="${crtfctVO.mbrId}"/>
                           
                           <!-- 자격증 명 -->
                           <input type="text" class="edit-control title" name="crtfctNm"
                              value="${crtfctVO.crtfctNm}" readonly style="flex: 1;">
                              
                           <!-- Edit/Delete 아이콘 -->
                           <div style="display: flex; margin-right: -40px;">
                              <span class="material-symbols-outlined edit updateCrtfctAjax sedit">edit</span> 
                              <span class="material-symbols-outlined edit DelCrtAjax sdel">delete</span>
                           </div>   
                              
                           <!-- 주최기관 -->
                           <input type="text" class="edit-control crtfctPblcnoffic" name="crtfctPblcnoffic"
                           value="${crtfctVO.crtfctPblcnoffic}" readonly><br>   
                              
                           <!-- 취득연월 -->
                           <input type="text" class="edit-control crtfctAcqsDate" name="crtfctAcqsDate"
                           value="${crtfctVO.crtfctAcqsDate.substring(0, 4)}.${crtfctVO.crtfctAcqsDate.substring(4, 6)}"
                           readonly>
                        </div>
                     </c:forEach>
                  </c:if>
               </div>
            </div>
   
			</div>
		</div>
	</div>
</div>


</body>