package kr.or.ddit.oustou.service.impl;

import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.mapper.OutsouMapper;
import kr.or.ddit.mapper.UserMapper;
import kr.or.ddit.oustou.controller.OutsouController;
import kr.or.ddit.oustou.service.OutsouService;
import kr.or.ddit.util.UploadController;
import kr.or.ddit.vo.CodeVO;
import kr.or.ddit.vo.OsClVO;
import kr.or.ddit.vo.OsDevalVO;
import kr.or.ddit.vo.OutsouVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class OutsouServiceImpl implements OutsouService {
	
	@Inject
	OutsouMapper oustouMapper;
	
	//서비스 게시판 번호를 가져오기 위함
	@Autowired
	OutsouController outsouController; 
	
	//파일 처리를 위한 
	@Autowired
	UploadController uploadController;
	
	//<!--  외주 등록  -->
	@Transactional
	@Override
	public int  registPostAjax(OutsouVO outsouVO) {
		
		//0. 메인 이미지 처리 
		MultipartFile[] multipartFiles = outsouVO.getMainFile();
		log.info("multipartFiles == > " + multipartFiles);
		//1. 상세이미지 처리
		MultipartFile[] multipartFiles2 = outsouVO.getDetailFile();
		log.info("multipartFiles2 == > " + multipartFiles2);
		
		// 메인 이미지
		if (multipartFiles == null || multipartFiles.length == 0 || multipartFiles[0].isEmpty()) {
		    log.info("새로운 파일이 업로드되지 않았습니다. 세팅 안해");
		    outsouVO.setOutordMainFile("2"); // fileGroupNo의 값을 세팅
		} else {
		    // 새로운 파일 업로드 처리
		    String fileGroupSn = this.uploadController.multiImageUpload(multipartFiles, "/outsou/mainFile");
		    log.info("mainFile->fileGroupSn : " + fileGroupSn);
		    outsouVO.setOutordMainFile(fileGroupSn); // fileGroupNo의 값을 세팅
		}

		// 상세 이미지
		if (multipartFiles2 == null || multipartFiles2.length == 0 || multipartFiles2[0].isEmpty()) { 
		    log.info("새로운 파일이 업로드되지 않았습니다. 세팅 안해");
		    outsouVO.setOutordDetailFile("1");
		} else {
		    // 새로운 파일 업로드 처리
		    String fileGroupSn = this.uploadController.multiImageUpload(multipartFiles2, "/outsou/detailFile");
		    log.info("outsou->fileGroupSn : " + fileGroupSn);
		    outsouVO.setOutordDetailFile(fileGroupSn);
		}

		/*
		 [1.IT프로그래밍]->OUTSOU, OS_DEVAL, OS_KEYWOED
		 OutsouVO(outordNo=null, outordLclsf=OULC01, outordMlsfc=OULC01-002, outordTtl=1, ..., 
		 	osDevalVO=OsDevalVO(srvcNo=null, outordNo=null, srvcLevelCd=SRLE01, srvcTeamscaleCd=SRTE01, srvcLangCd=SRLA16, srvcDatabaseCd=SRDB16, srvcCludCd=SRCL14, srvcEtc=b, ..), 
		 	osClVO=OsClVO(srvcNo=null, ..), 
		 	osKeywordVO=OsKeywordVO(kwrdNo=null, outordNo=null, kwrdNm=a))
		 */
		/*
		 [2.자기소개서]->OUTSOU, OS_CL 이 두 개의 테이블에 insert
		 OutsouVO(outordNo=null, outordLclsf=OULC02, outordMlsfc=OULC02-001, outordTtl=1, ...,
		  	osDevalVO=OsDevalVO(srvcNo=null, outordNo=null, srvcLevelCd=null, srvcTeamscaleCd=null, srvcLangCd=null, srvcDatabaseCd=null, srvcCludCd=null, srvcEtc=, srvcJobpd=null, srvcUpdtnmtm=null, srvcFileprovdyn=null, srvcSklladit=null), 
		  	osClVO=OsClVO(srvcNo=null, outordNo=null, srvcFld=SRFL02, srvcKnd=SRKN03, srvcArctype=SRAR02), 
		  	osKeywordVO=OsKeywordVO(kwrdNo=null, outordNo=null, kwrdNm=))
		 */
		//대분류 를 구별하기 위해 불러옴
		String outordLclsf = outsouVO.getOutordLclsf();
		
		int result = 0;
		
		if(outordLclsf.equals("OULC01")) {//1.IT프로그래밍->mapper호출을 3회
			// 1. Outsou 테이블에 먼저 insert
			result += this.oustouMapper.insertOutsou(outsouVO);
			
			// 2. 자동 생성된 outordNo를 OutsouVO에 세팅
			String outordNo = outsouVO.getOutordNo();
			log.info("자동 생성된 outordNo -> " + outordNo);
			
			// 3. OsDevalVO의 outordNo에도 같은 값 세팅
			if (outsouVO.getOsDevalVO() != null && outsouVO.getOsKeywordVO() != null) {
			    outsouVO.getOsDevalVO().setOutordNo(outordNo);
			    outsouVO.getOsKeywordVO().setOutordNo(outordNo);
			}
			
			result += this.oustouMapper.insertOsDeval(outsouVO.getOsDevalVO());
			result += this.oustouMapper.insertOsKeywoed(outsouVO.getOsKeywordVO());
		}else {//2.자기소개서->mapper호출을 2회
			result += this.oustouMapper.insertOutsou(outsouVO);
			
			// 2. 자동 생성된 outordNo를 OutsouVO에 세팅
			String outordNo = outsouVO.getOutordNo();
			log.info("자동 생성된 outordNo -> " + outordNo);
			
			// 3. OsDevalVO의 outordNo에도 같은 값 세팅
		    if (outsouVO.getOsClVO() != null ) {
		        outsouVO.getOsClVO().setOutordNo(outordNo);
		    }
			result += this.oustouMapper.insertOsCl(outsouVO.getOsClVO());
		}
		
		return result;
	}
	
	//외주 상세 
	@Override
	public OutsouVO detail(String outordNo) {
		return this.oustouMapper.detail(outordNo);
	}

	//외주 삭제 
	@Override
	public int deletePost(String outordNo) {
		return this.oustouMapper.deletePost(outordNo);
	}
	
	

}
