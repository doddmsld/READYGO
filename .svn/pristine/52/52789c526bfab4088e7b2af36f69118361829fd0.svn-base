<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<script type="text/javascript" src="/resources/js/jquery.min.js"></script>
<script type="text/javascript" src="/resources/ckeditor5/ckeditor.js"></script>
<!-- 외주 css 파일 -->
<link rel="stylesheet"
	href="<%=request.getContextPath()%>/resources/css/outsou/reviewdetails.css" />

<sec:authentication property="principal" var="prc"/>
<script type="text/javascript">
document.querySelector('#registForm').addEventListener('submit', function(event) {
    const selectElement = document.querySelector('#pstOthbcscope');
    const selectedValue = selectElement.value;
    
    if (selectedValue === "") {
        alert('공개범위를 선택해주세요.');
        event.preventDefault(); // 폼 제출을 막습니다
    }
});


$(function(){
    // CKEditor 글 복제
    $(".ck-blurred").keydown(function(){
        $("#pstCn").val(window.editor.getData());
    });

    $("#uploadFile").on("change", handleImg);

    $(".ck-blurred").focusout(function(){
        $("#perDet").val(window.editor.getData());
    });

});
ClassicEditor.create(document.querySelector('#pstCnTemp'))
.then(editor => {
    editor.enableReadOnlyMode('#pstCnTemp');
    window.editor = editor;
    
    // 폼 제출 전 CKEditor의 내용을 textarea에 동기화
    document.querySelector('#registForm').addEventListener('submit', function(event) {
        document.querySelector('#pstCn').value = editor.getData();
    });
})
.catch(error => {
    console.error(error);
});

$(document).ready(function(){
    // 댓글 등록 버튼 클릭 시
    $('#submitComment').on("click", function(event) {
        event.preventDefault(); // 폼 제출 막기
        
        const commentContent = $('#commentContent').val();  // 댓글 내용
        const pstSn = $('#pstSn').val();  // 게시글 번호
        
        if (commentContent === "") {
            alert("댓글을 입력하세요.");
            return;
        }

        // Ajax로 댓글 등록 요청
        $.ajax({
            url: '/adm/inquiryBoard/registReplyPost',
            type: 'POST',
            data: {
                commentContent: commentContent,
                pstSn: pstSn
            },
            success: function(response) {
                loadComments(); // 성공 시 댓글 목록 갱신
                $('#commentContent').val(''); // 댓글 입력창 초기화
            },
            error: function(xhr, status, error) {
                alert('댓글 등록 실패: ' + error);
            }
        });
    });
    // 댓글 목록 로딩
    function loadComments() {
        const pstSn = $('#pstSn').val();

        $.ajax({
            url: '/adm/inquiryBoard/replyList',
            type: 'GET',
            data: { pstSn: pstSn },
            success: function(response) {
                $('#commentsList').html(response); // 댓글 목록 업데이트
            },
            error: function(xhr, status, error) {
                alert('댓글 목록 로딩 실패: ' + error);
            }
        });
    }

    // 페이지 로드 시 댓글 목록 불러오기
    loadComments();
});
</script>

<div class="container">

	    <div class="container-fluid">
	        <div class="row mb-2" >
	            <div class="rvttit">
					<h2>리뷰 게시판</h2>
				</div>
	        </div>
	    </div>
	
    <div class="title-group">
        <div class="content-group">
        <form name="deletePost" id="deletePost" action="/adm/inquiryBoard/deletePost" method="post">
            <div class="Content">
                <div class="cn-detail">
                    <p style="font-weight: bold;"><br>[${boardVO.pstOthbcscope}]&nbsp;${boardVO.pstTtl}</p>
       					<c:choose>
							<c:when test = "${boardVO.mbrId == 'admin'}">
							<p>★관리자(${boardVO.pstMdfcnDt})<br>조회수:${boardVO.pstInqCnt}</p>
							</c:when>
						<c:otherwise>
							<p>${boardVO.mbrId}(${boardVO.pstMdfcnDt})<br>조회수:${boardVO.pstInqCnt}</p>
						</c:otherwise>
						</c:choose>
 					<div class="scrollable-table">
					<div class="scroll-content">
                    <p>${boardVO.pstCn}</p>
                    </div>
                    </div>
                </div>
            </div>
            <!-- 버튼 배치 -->
		    <div class="button-container">
		        <!-- 공지 목록 버튼 (왼쪽 정렬) -->
		        <button type="button" class="btn btn-List" onclick="location.href='/adm/inquiryBoard/admInquiryList'">목록</button>
		        <!-- 수정 및 삭제 버튼 그룹 (오른쪽 정렬) -->
		        <div class="button-group-right">
		        	<c:if test="${boardVO.mbrId == 'admin'}">
		        	<button type="button" class="btn btn-Edit" onclick="location.href='/adm/inquiryBoard/admInquiryUpdate?seNo=${boardVO.seNo}&pstSn=${boardVO.pstSn}'">수정</button>
					</c:if>
		            <button type="submit" class="btn btn-Del">삭제</button>
		            <input type="hidden" name="pstSn" id="pstSn" value="${boardVO.pstSn}">
		        </div>
		    </div>
            <sec:csrfInput/>
        </form>
        </div>
    </div>

    <!-- 댓글 입력창 및 목록 섹션 -->
    <div class="comment-section">
        <!-- 댓글 입력창 -->
        <form name="replyRegistPost" id="replyRegistPost" action="/adm/inquiryBoard/registReplyPost" method="post">
        <div class="comment-input">
             <input type="text" id="commentContent" name="commentContent" class="form-control ck-blurred" placeholder="댓글을 입력하세요" rows="5">
            <button type="submit" id="submitComment" class="btn btn-Regist">등록</button>
        </div>
        <sec:csrfInput/>
        <input type="hidden" id="pstSn" name="pstSn" value="${boardVO.pstSn}"/>
        </form>

        <!-- 댓글 목록 -->
        <div id="commentsList">
            <c:if test="${empty commentsList}">
            	<c:choose>
            		<c:when test="${boardVO.mbrId =='admin'}"></c:when>
            		<c:otherwise>
		            <p>답변이 등록되지 않았습니다.</p>
		            </c:otherwise>
	            </c:choose>
	        </c:if>
		    <c:forEach var="comment" items="${commentsList}">
            <div class="comment-item" data-cmnt-no="${comment.cmntNo}">
				    <p>
				        <strong>${comment.mbrId}</strong>(${comment.cmntRegDt})
				    </p>
					<div class="button-group-right">
					    <p class="comment-content">${comment.cmntCn}</p>
					    <div class="comment-buttons">
					        <c:if test="${prc.username == comment.mbrId}">
					            <button type="button" class="btn btn-edit-comment" data-id="${comment.cmntNo}">수정</button>
					            <button type="button" class="btn btn-delete-comment" data-id="${comment.cmntNo}">삭제</button>
					        </c:if>
					    </div>
					</div>

	                <!-- 댓글 수정 폼-->
	                <div class="edit-comment-form" style="display: none;">
			            <input type="text" class="edit-comment-text" value="${comment.cmntCn}">
			            <button type="button" class="btn btn-save-edit">저장</button>
			            <button type="button" class="btn btn-cancel-edit">취소</button>
			        </div>
		        </div>
		        </c:forEach>
            </div>
</div>
</div>
<script type="text/javascript">
$(document).ready(function(){
    // 댓글 수정 버튼 클릭 시
    $(document).on("click", '.btn-edit-comment', function() {
        const commentItem = $(this).closest('.comment-item');
        commentItem.find('.comment-content').hide(); // 댓글 내용 숨기기
        commentItem.find('.edit-comment-form').show(); // 수정 폼 표시하기
        commentItem.find('.btn-edit-comment').hide(); 
        commentItem.find('.btn-delete-comment').hide(); 
    });
    // 댓글 수정 취소 버튼 클릭 시
    $(document).on("click", '.btn-cancel-edit', function() {
        const commentItem = $(this).closest('.comment-item');
        commentItem.find('.comment-content').show(); // 댓글 내용 표시
        commentItem.find('.edit-comment-form').hide(); // 수정 폼 숨기기
        commentItem.find('.btn-edit-comment').show(); 
        commentItem.find('.btn-delete-comment').show(); 
    });
    // 댓글 수정 저장 버튼 클릭 시
    $(document).on("click", '.btn-save-edit', function() {
        const commentItem = $(this).closest('.comment-item');
        const cmntNo = commentItem.data('cmnt-no');
        const pstSn = $('#pstSn').val();
        const cmntCn = commentItem.find('.edit-comment-text').val();

        $.ajax({
            url: '/adm/inquiryBoard/updateComment',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                cmntNo: cmntNo,
                pstSn: pstSn,
                cmntCn: cmntCn
            }),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(response) {
                if (response === "success") {
                    commentItem.find('.comment-content').text(cmntCn).show(); // 댓글 내용 업데이트 및 표시
                    commentItem.find('.edit-comment-form').hide(); // 수정 폼 숨기기
                } else {
                    alert('댓글 수정 실패');
                }
            },
            error: function(xhr, status, error) {
                alert('댓글 수정 실패: ' + error);
            }
        });
    });

    // 댓글 삭제 버튼 클릭 시
    $(document).on("click", '.btn-delete-comment', function() {
        if (confirm('댓글을 삭제하시겠습니까?')) {
            const cmntNo = $(this).data('id');
            const pstSn = $('#pstSn').val();
            
            $.ajax({
                url: '/adm/inquiryBoard/deleteComment',
                type: 'POST',
                data: {
                    cmntNo: cmntNo,
                    pstSn: pstSn
                },
                beforeSend: function(xhr) {
                    xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
                },
                success: function(response) {
                    if (response === "success") {
                        location.reload(); // 댓글 삭제 후 목록 갱신.. 리로드로할게...
                    } else {
                        alert('댓글 삭제 실패');
                    }
                },
                error: function(xhr, status, error) {
                    alert('댓글 삭제 실패: ' + error);
                }
            });
        }
    });
});

ClassicEditor.create(document.querySelector('#pstCnTemp'))
    .then(editor => {
        editor.enableReadOnlyMode('#pstCnTemp');
        window.editor = editor;
        
        // 폼 제출 전 CKEditor의 내용을 textarea에 동기화
        document.querySelector('#registForm').addEventListener('submit', function(event) {
            document.querySelector('#pstCn').value = editor.getData();
        });
    })
    .catch(error => {
        console.error(error);
    });
</script>
