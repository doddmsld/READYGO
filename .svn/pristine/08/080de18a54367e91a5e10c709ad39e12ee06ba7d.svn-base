package kr.or.ddit.enter.entcontroller;

import java.awt.print.Pageable;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.inject.Inject;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.enter.entservice.*;
import kr.or.ddit.service.PbancService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.util.ArticlePage3;
import kr.or.ddit.vo.ApplicantVO;
import kr.or.ddit.vo.CodeVO;
import kr.or.ddit.vo.EnterEmpYcntVO;
import kr.or.ddit.vo.EnterRevenueVO;
import kr.or.ddit.vo.EnterVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.PbancVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/enter")
public class EnterController {
	
	@Inject
	private EnterService enterService;
	
	@Inject
	private PbancService pbancService; // 채용 공고 관련 서비스
	
	@Inject
	private EnterRevenueService enterRevenueService;
	
    @Autowired
    private ServletContext servletContext;

	@Inject
	EnterServiceS enterServiceS;
	
	/*기업프로필*/
	@GetMapping("/profile")
	public String profile(@RequestParam("entId") String entId, Model model) {
		// 서비스로부터 기업 프로필 정보를 가져옴
		EnterVO enterVO = this.enterService.profile(entId);
		
		// 기업 프로필 정보를 모델에 추가
		model.addAttribute(enterVO);

		// 서비스로부터 채용 공고 리스트를 가져옴
        List<PbancVO> pbancList = pbancService.getPbancList(entId);
        log.info("pbancList: " + pbancList);
        
        // 모델에 채용 공고 리스트 추가
        model.addAttribute("PbancVOList", pbancList);
        
        // 매출액 리스트
        List<EnterRevenueVO> revenueList = enterRevenueService.revenue(entId);
        log.info("revenueList : " + revenueList);
        
        List revenueYearList = new ArrayList(); // 연도
        List revenueAmountList = new ArrayList(); // 매출액
        
        for(int i=0; i<revenueList.size(); i++) {
        	revenueYearList.add(revenueList.get(i).getRevenueYear());
        	revenueAmountList.add(revenueList.get(i).getRevenueAmount());
        }
        // 모델에 매출연도, 매출액 추가
        model.addAttribute("revenueYearList", revenueYearList);
        model.addAttribute("revenueAmountList", revenueAmountList);
      
        //연도별 입사자수 
       List<EnterEmpYcntVO> empYcntList = enterService.empYcnt(entId);
       log.info("empYcntList", empYcntList);
        
       List entYmList = new ArrayList(); // 연월
       List entEmpYcntList = new ArrayList(); // 해당연도 전체사원수
       List entNewEmpList = new ArrayList(); // 입사자
       List entOutEmpList = new ArrayList(); // 퇴사자
       log.info("entYmList",entYmList);
       
       for(int i=0; i<empYcntList.size(); i++) {
    	   entYmList.add(empYcntList.get(i).getEntYm());
    	   entEmpYcntList.add(empYcntList.get(i).getEntEmpYcnt());
    	   entNewEmpList.add(empYcntList.get(i).getEntNewemp());
    	   entOutEmpList.add(empYcntList.get(i).getEntOutemp());
       }
       //모델에 연도별 입사자수(연월, 해당연도 전체 사원수, 입사자, 퇴사자) 추가 
       model.addAttribute("entYmList",entYmList);
       model.addAttribute("entEmpYcntList",entEmpYcntList);
       model.addAttribute("entNewEmpList",entNewEmpList);
       model.addAttribute("entOutEmpList",entOutEmpList);

       return "enter/info/mypage/profile";
	}
	
	
	/*기업정보수정폼*/
	@GetMapping("/edit")
	public String edit(@RequestParam("entId") String entId, Model model) {
		
		EnterVO enterVO = this.enterService.edit(entId);
		model.addAttribute(enterVO);
		
        // 업종
        List<CodeVO> indutyList = enterService.getIndutyList();
        log.info("indutyList : " + indutyList);
        model.addAttribute("indutyList", indutyList);
		
        // 기업형태
        List<CodeVO> entStleCdList = enterService.getEntStleCdList();
        model.addAttribute("entStleCdList", entStleCdList);
        
		return "enter/info/mypage/edit";
	}
	
    /*기업정보수정실행
     * <input type="file" id="entLogo" name="entLogoFile" style="display: none;"
     * */
    @PostMapping("/editPost")
    public String editPost(EnterVO enterVO, 
            MultipartFile entLogoFile, 
            HttpServletRequest request, Model model) {
        MultipartFile logoFile = enterVO.getEntLogoFile();
        
        // 기업 로고 업로드 하는 부분
        if (!logoFile.isEmpty()) {
            try {
                // 파일 저장 경로를 ServletContext에서 얻음
                String filePath = servletContext.getRealPath("/resources/images/enter/");
                //C:\sts-bundle\workspace\readyGo\src\main\webapp\resources\images\enter(x)
                //캐시 폴더 : 이미지가 바로 보임
                //C:\sts-bundle\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\readyGo\resources\images\enter\
                log.info("editPost->filePath : " + filePath);
                File directory = new File(filePath);

                // 디렉토리가 없으면 생성
                if (!directory.exists()) {
                    directory.mkdirs();
                }

                // 파일 저장
                String fileName = logoFile.getOriginalFilename();	//동오.jpg
                
                //UUID 처리
                UUID uuid = UUID.randomUUID();
                //		   asdflkjasdflk_동오.jpg
                fileName = uuid.toString() + "_" + fileName;
                
                //C:\sts-bundle\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\readyGo\resources\images\enter\ + "\" + asdflkjasdflk_동오.jpg
                File destinationFile = new File(directory, fileName);
                //logoFile : 파일객체
                //파일객체.복사(대상경로 + 파일명)
                logoFile.transferTo(destinationFile);

                // 파일명을 VO에 설정
                // asdflkjasdflk_동오.jpg
                enterVO.setEntLogo(fileName);

            } catch (IOException e) {
                e.printStackTrace();
                return "redirect:/enter/edit?entId=" + enterVO.getEntId() + "&error=upload";
            }
        }
        
        int result = this.enterService.editPost(enterVO);
        return "redirect:/enter/edit?entId=" + enterVO.getEntId();
    }
	
	/*기업탈퇴*/
	@ResponseBody
	@PostMapping("/deleteAjax")
	public int deleteAjax(@RequestBody String entId) {
		log.info("deleteAjax -> entId : " + entId);
		
		int result = this.enterService.deleteAjax(entId);
		
		return result;
	}
	
	/*인재*/
	@GetMapping("/injae")
	public ModelAndView injae(ModelAndView mav, String entId,
			@RequestParam(value = "currentPage", required = false, defaultValue="1") Integer currentPage) {

	    // 스킬 목록 가져오기
	    List<CodeVO> skillList = enterService.getSkillList();
	    log.info("skillList : " + skillList);
	    mav.addObject("skillList", skillList);
	    
		Map<String, Object> map = new HashMap<String, Object>(); 		
		map.put("currentPage", currentPage);
		  
		// list -> map : {keyword=개똥이, gubun=lprodNm, currentPage=1}
		log.info("list->map : " + map);
		  
		List<MemberVO> getInjaeList =  this.enterService.getInjaeList(map);
		log.info("list -> getInjaeList : "+ getInjaeList);
		mav.addObject("getInjaeList", getInjaeList);
		  
        // 전체 행의 수
        int total = this.enterService.getTotal();
        
        // 페이지네이션 객체
        ArticlePage3<MemberVO> articlePage = new ArticlePage3<MemberVO>(total, currentPage, 5, getInjaeList, map);
        
        mav.addObject("articlePage", articlePage);
        
        // 추천인재
        List<MemberVO> recommendList = enterService.getRecommendList();
        mav.addObject("recommendList", recommendList);
        
        //스카우트 제안 - 해당기업 공고 꺼내기
        List<PbancVO> pbancList = enterService.pbancList(entId);
        mav.addObject("pbancList", pbancList);
        
        // 뷰 리졸버
        mav.setViewName("enter/injaePage/injae");
        
        return mav;
	}
	
	/*공고관리*/
	@GetMapping("/pbanc")
	public ModelAndView pbanc(ModelAndView mav, String entId,
			@RequestParam(value = "currentPage", required = false, defaultValue="1") Integer currentPage
	      , @RequestParam(value ="keywordInput", required = false,defaultValue="") String keyword
          , @RequestParam(value = "dateInput", required = false,defaultValue="") String date
          , @RequestParam(value = "gubun", required = false,defaultValue="") String gubun
			) {
		
		/*공고 총 개수 구하기*/
		int count = this.enterServiceS.pbCount(entId);
		mav.addObject("count", count);
		
		/*페이징처리*/
		Map<String, Object> map = new HashMap<String, Object>(); 		
		map.put("currentPage", currentPage);
		map.put("entId", entId);        
		map.put("keyword", keyword);
		map.put("date", date);
		map.put("gubun", gubun);
		
		
		// list -> map : {keyword=개똥이, gubun=lprodNm, currentPage=1}
		/*공고 리스트*/
		List<PbancVO> pbancList = enterService.getPbancList(map);
		log.info("list->map : " + map);
		log.info("pbancList : " + pbancList);
		mav.addObject("pbancList", pbancList);
		  
        // 전체 행의 수
        int total = this.enterService.getTotal();
        
        // 페이지네이션 객체
        ArticlePage3<PbancVO> articlePage = new ArticlePage3<PbancVO>(total, currentPage, 5, pbancList, map);
        
        mav.addObject("articlePage", articlePage);
		
		mav.setViewName("enter/pbancPage/pbancList/pbancFolder/pbanc");
		return mav;
	}	
	
	
	
	
	
	
	
}
