package kr.or.ddit.service.impl;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.ddit.mapper.FileDetailMapper;
import kr.or.ddit.mapper.MemProfileMapper;
import kr.or.ddit.mapper.MemberMapper;
import kr.or.ddit.service.MemProfileService;
import kr.or.ddit.util.UploadController;
import kr.or.ddit.vo.ApplicantVO;
import kr.or.ddit.vo.CodeVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.PrfAcbgVO;
import kr.or.ddit.vo.PrfActVO;
import kr.or.ddit.vo.PrfBusinessVO;
import kr.or.ddit.vo.PrfCareerVO;
import kr.or.ddit.vo.PrfCrtfctVO;
import kr.or.ddit.vo.PrfVO;
import kr.or.ddit.vo.PrfWnpzVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class MemProfileServiceImpl implements MemProfileService {

    @Inject
    MemProfileMapper memProfileMapper;
    
    @Inject
    MemberMapper memberMapper;
    
	@Inject
	FileDetailMapper fileDetailMapper;
	
	@Inject
	UploadController uploadController;
	
   // DI, IoC
   // c:\\upload
   @Inject
   String uploadPath;
    

    // 프로필
	@Override
	public PrfVO profile(String mbrId) {
		return this.memProfileMapper.profile(mbrId);
	}
	// 프로필 수정
	@Override
	public int prfUpdateAjax(Map<String, Object> map) {
		return this.memProfileMapper.prfUpdateAjax(map);
	}

	
    // 경력 목록
    @Override
    public List<PrfCareerVO> careerList(String mbrId) {
        return this.memProfileMapper.careerList(mbrId);
    }
	// 경력 추가
	@Override
	public int careerAddAjax(PrfCareerVO prfCareerVO) {
		return this.memProfileMapper.careerAddAjax(prfCareerVO);
	}
	// 경력 수정
	@Override
	public int careerUpdateAjax(PrfCareerVO prfCareerVO) {
		
		return this.memProfileMapper.careerUpdateAjax(prfCareerVO);
	}
	// 경력 삭제
	@Override
	public int careerDelAjax(Map<String, Object> map) {
		return this.memProfileMapper.careerDelAjax(map);
	}
	

    // 학력 목록 조회
    @Override
    public List<PrfAcbgVO> acbgList(String mbrId) {
    	return this.memProfileMapper.acbgList(mbrId);
    }
    // 학력 추가
	@Override
	public int acbgAddAjax(PrfAcbgVO prfAcbgVO) {
		return this.memProfileMapper.acbgAddAjax(prfAcbgVO);
	}
	// 학력 수정
	@Override
	public int acbgUpdateAjax(PrfAcbgVO prfAcbgVO) {
		return this.memProfileMapper.acbgUpdateAjax(prfAcbgVO);
	}
	// 학력 삭제
	@Override
	public int acbgDelAjax(Map<String, Object> map) {
		return this.memProfileMapper.acbgDelAjax(map);
	}
	// 프로필 학력 항목
	@Override
	public List<CodeVO> prseList() {
		return this.memProfileMapper.prseList();
	}
	// 학위 항목
	@Override
	public List<CodeVO> acdeList() {
		return this.memProfileMapper.acdeList();
	}
	// 전공계열 항목
	@Override
	public List<CodeVO> acspList() {
		return this.memProfileMapper.acspList();
	}
    
	
    // 자격증 조회
	@Override
	public List<PrfCrtfctVO> crtfctList(String mbrId) {
		return this.memProfileMapper.crtfctList(mbrId);
	}
	// 자격증 추가
	@Override
	public int crtfctAddAjax(PrfCrtfctVO prfCrtfctVO) {
		return this.memProfileMapper.crtfctAddAjax(prfCrtfctVO);
	}
	// 자격증 수정
	@Override
	public int crtfctUpdateAjax(PrfCrtfctVO prfCrtfctVO) {
		return this.memProfileMapper.crtfctUpdateAjax(prfCrtfctVO);
	}

	// 자격증 삭제
	@Override
	public int crtfctDelAjax(Map<String, Object> map) {
		return this.memProfileMapper.crtfctDelAjax(map);
	}


	
	// 수상 내역 조회
	@Override
	public List<PrfWnpzVO> WnpzList(String mbrId) {
		return this.memProfileMapper.WnpzList(mbrId);
	}
	// 수상 추가
	@Override
	public int WnpzAddAjax(PrfWnpzVO prfWnpzVO) {
		return this.memProfileMapper.WnpzAddAjax(prfWnpzVO);
	}

	// 수상 수정
	@Override
	public int wnpzUpdateAjax(PrfWnpzVO prfWnpzVO) {
		return this.memProfileMapper.wnpzUpdateAjax(prfWnpzVO);
	}

	// 수상 삭제
	@Override
	public int WnpzDelAjax(Map<String, Object> map) {
		return this.memProfileMapper.WnpzDelAjax(map);
	}

	
	// 활동 내역 조회
	@Override
	public List<PrfActVO> ActList(String mbrId) {
		return this.memProfileMapper.ActList(mbrId);
	}
	// 활동 추가
	@Override
	public int actAddAjax(PrfActVO prfActVO) {
		return this.memProfileMapper.actAddAjax(prfActVO);
	}
	// 활동 수정
	@Override
	public int actUpdateAjax(PrfActVO prfActVO) {
		return this.memProfileMapper.actUpdateAjax(prfActVO);
	}
	// 활동 삭제
	@Override
	public int actDelAjax(Map<String, Object> map) {
		return this.memProfileMapper.actDelAjax(map);
	}

	
	// 업종 조회
	@Override
	public List<PrfBusinessVO> BusinessList(String mbrId) {
		return this.memProfileMapper.BusinessList(mbrId);
	}
	
	// 업종 추가
	@Override
	public int BusinessAdd(PrfBusinessVO prfBusinessVO) {

	    String businessCodesStr = prfBusinessVO.getGetBusinessCodesStr();  // 
	    String[] businessCodeArr = businessCodesStr.split(",");
	    
	    int result = 0;

	    // 각각의 업종을 처리하여 DB에 insert
	    for (String businessCode : businessCodeArr) {
	        PrfBusinessVO vo = new PrfBusinessVO();
	        vo.setMbrId(prfBusinessVO.getMbrId());  // 회원 ID 설정
	        vo.setTpbizSeCd(businessCode);          // 업종 코드 설정

	        // DB에 insert 실행 (반복문을 돌면서 여러 번 실행)
	        result += this.memProfileMapper.BusinessAdd(vo);
	    }

	    // 삽입된 레코드 수를 반환 (삽입된 업종의 개수)
	    return result;
	}
    @Transactional
    @Override
    public void addMultipleBusinesses(List<PrfBusinessVO> prfBusinessList) {
        for (PrfBusinessVO prfBusinessVO : prfBusinessList) {
            memProfileMapper.BusinessAdd(prfBusinessVO);
        }
    }

	// 업종 삭제
	@Override
	public int BusinessDelAjax(Map<String, Object> map) {
		return this.memProfileMapper.BusinessDelAjax(map);
	}

}
