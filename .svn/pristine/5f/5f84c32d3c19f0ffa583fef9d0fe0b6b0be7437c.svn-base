package kr.or.ddit.oustou.controller;


import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.mapper.UserMapper;
import kr.or.ddit.oustou.service.OutsouMainService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.CodeVO;
import kr.or.ddit.vo.OutsouVO;
import lombok.extern.slf4j.Slf4j;


@Slf4j
@Controller
@RequestMapping("/outsou")
public class OutsouMainController {

	@Inject
	OutsouMainService oustouMainService;
	
	//공통코드를 위한 
	@Autowired
	UserMapper userMapper;
	

	/*외주 메인*/
	@GetMapping("/main")
	public String main(Model model) {
		
		//공통 코드에서 중분류카테고리 가져오기
		List<OutsouVO> BestCategory = this.oustouMainService.getCategory();
		log.info("BestCategory -> " + BestCategory);


		
		//외주 목록에서 최신글 가져오기 (컴퓨터 현재날짜에서 최신 순 5개 )
		List<OutsouVO> NewList = this.oustouMainService.getnewList();
		log.info("NewList -> " + NewList);
		
		//외주목록에서 조회수높은거 가져오기(5개)
		List<OutsouVO> BestList = this.oustouMainService.getBestList();
		log.info("BestList -> " + BestList);
		
		//게시판에서 리뷰 목록 가져오기 3~5개 정보 (좋아요 많은 순 )
		
		model.addAttribute("BestCategory",BestCategory); // 카테고리  
		model.addAttribute("NewList",NewList); // 메인 게시글  new
		model.addAttribute("BestList",BestList); // 메인 게시글 Best
		
		return "outsou/main";
	}

	
	
	/* 외주 게시판 목록 */
//	@GetMapping("/list")
	@RequestMapping(value="/list",method=RequestMethod.GET)
	public ModelAndView list(ModelAndView mav,
			@RequestParam(value = "outordMlsfc", required = false, defaultValue = "") String outordMlsfc, //리스트를 가져오기 우한 중분류 
			@RequestParam(value = "currentPage", required = false, defaultValue = "1") Integer currentPage,   
			@RequestParam(value = "orderType", required = false) String orderType,   //정렬을 우위위한 
		    @RequestParam(value = "srvcLevelCd", required = false) String srvcLevelCd,   //옵션의 정보를 보내기 위한 
		    @RequestParam(value = "srvcTeamscaleCd", required = false) String srvcTeamscaleCd) {	
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("currentPage", currentPage);
		map.put("outordMlsfc", outordMlsfc);
		map.put("orderType", orderType);
		map.put("srvcTeamscaleCd", srvcTeamscaleCd);
		
		List<CodeVO> SrleList = oustouMainService.getSrleList(); // 기술수준 가져오기 
		List<CodeVO> SrteList = oustouMainService.getSrteList(); // 팀 규모 가져오기
		List<OutsouVO> CategoryList = this.oustouMainService.geCategoryist(map); // 각 카테고리별 리스트 
		log.info("SrleList -> " + SrleList);
		log.info("SrteList -> " + SrteList);
		log.info("CategoryList -> " + CategoryList);
		
		
		int total = this.oustouMainService.getTotal(map); // 페이지네이션 전체 행의수

		// 페이지네이션 객체
		ArticlePage<OutsouVO> articlePage = new ArticlePage<OutsouVO>(total, currentPage, 10, CategoryList, map);
		mav.addObject("SrleList", SrleList);// 기술수준 목록 가져오기
		mav.addObject("SrteList", SrteList);// 기술수준 목록 가져오기
		
		
		mav.addObject("articlePage", articlePage); //페이지네이션 + 언니거
		// 뷰 리졸버
		mav.setViewName("outsou/list");
		return mav;
	}
	
	
	/* 외주 웹게시판 목록 */
//	@GetMapping("/list")
	@RequestMapping(value="/WebList",method=RequestMethod.GET)
	public ModelAndView WebList(ModelAndView mav,
			@RequestParam(value = "outordMlsfc", required = false, defaultValue = "") String outordMlsfc, //리스트를 가져오기 우한 중분류 
			@RequestParam(value = "currentPage", required = false, defaultValue = "1") Integer currentPage,   
			@RequestParam(value = "orderType", required = false) String orderType,   //정렬을 우위위한 
			@RequestParam(value = "srvcLevelCd", required = false) String srvcLevelCd,   //옵션의 정보를 보내기 위한 
			@RequestParam(value = "srvcTeamscaleCd", required = false) String srvcTeamscaleCd) {	
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("currentPage", currentPage);
		map.put("outordMlsfc", outordMlsfc);
		map.put("orderType", orderType);
		map.put("srvcTeamscaleCd", srvcTeamscaleCd);
		
		List<CodeVO> SrleList = oustouMainService.getSrleList(); // 기술수준 가져오기 
		List<CodeVO> SrteList = oustouMainService.getSrteList(); // 팀 규모 가져오기
		List<OutsouVO> CategoryList = this.oustouMainService.geCategoryist(map); // 각 카테고리별 리스트 
		log.info("SrleList -> " + SrleList);
		log.info("SrteList -> " + SrteList);
		log.info("CategoryList -> " + CategoryList);
		
		
		int total = this.oustouMainService.getTotal(map); // 페이지네이션 전체 행의수
		
		// 페이지네이션 객체
		ArticlePage<OutsouVO> articlePage = new ArticlePage<OutsouVO>(total, currentPage, 10, CategoryList, map);
		mav.addObject("SrleList", SrleList);// 기술수준 목록 가져오기
		mav.addObject("SrteList", SrteList);// 기술수준 목록 가져오기
		
		
		mav.addObject("articlePage", articlePage); //페이지네이션 + 언니거
		// 뷰 리졸버
		mav.setViewName("outsou/WebList");
		return mav;
	}
	
	
	/* 검색 결과 페이지 */
	@RequestMapping(value="/searchList",method=RequestMethod.GET)
//	@GetMapping("/searchList")
	public ModelAndView searchList (ModelAndView mav,
			@RequestParam(value="currentPage",required=false,defaultValue="1") int currentPage,
		    @RequestParam(value="keyword", required=false,defaultValue="") String keyword 
			) {
		Map<String,Object> map = new HashMap<String, Object>();
		map.put("currentPage", currentPage);
		map.put("keyword", keyword);
	    
	    // 2024
	    log.info("currentPage: " + currentPage); // currentPage
	    map.put("keyword", keyword); // 키워드 추가
		
	    log.info("map : " + map);
	    //*******map : {currentPage=1, keyword=, order=pbancNo}
	    log.info("map : " + map);
		
		 //*** 외주 목록 List
	    List<OutsouVO> scarchList = this.oustouMainService.getscarchList(map); // 각 카테고리별 리스트 
		log.info("scarchList : " + scarchList);
		
		//*** 기업정보 총 행 갯수
		int total = this.oustouMainService.getscarchTotal(map); // 페이지네이션 전체 행의수
		log.info("list->total : " + total);
		
		//기업정보 페이징
		ArticlePage<OutsouVO> articlePage2 = new ArticlePage<OutsouVO>(total, currentPage, 10, scarchList, map);
		log.info("articlePage2 : " + articlePage2);
		mav.addObject("articlePage2", articlePage2);
		mav.addObject("keyword", keyword);
		mav.addObject("total", total);

		// /WEB-INF/view/common/commonList2.jsp
		mav.setViewName("outsou/searchList");
		
		return mav;
	}
	

}
