<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<script type="text/javascript" src="/resources/js/jquery.min.js"></script>
<script type="text/javascript" src="/resources/ckeditor5/ckeditor.js"></script>
<style>
body {
    margin: 0;
    padding: 0;
    font-family: pretendard;
    background-color: #fff;
}

.container {
    width: 80%;
    margin: 0 auto;
    margin-left: 20%;
}

table {
    width: 80%;
    border-collapse: collapse;
    margin-top: 20px;
}

h1 {
    font-size: 28px;
    font-weight: bold;
    text-align: left;
    padding-top: 20px;
}

.search-container {
    display: flex;
    justify-content: center;
    margin-bottom: 10px;
}

input[type="text"] {
    width: 200px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-bottom: 10px;
}

.codeAddForm input[type="text"] {
    width: 150px; /* 입력창과 버튼을 맞추기 위해 계산 */
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.search-button {
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    background-color: #FD5D6C;
    color: white;
    width: 120px;
    margin-left: 10px; /* 입력창과 버튼 사이의 간격 */
}

.filter-button {
    padding: 10px 20px;
    border: 1px solid #FD5D6C;
    border-radius: 4px;
    cursor: pointer;
    background-color: #FD5D6C;
    color: white;
    transition: background-color 0.3s, color 0.3s; 
}

.filter-button:hover {
    background-color: white;
    color: #FD5D6C;
    border: 1px solid #FD5D6C; 
}

.filter-buttons {
    display: flex;
    justify-content: center;
    gap: 30px;
    margin-bottom: 20px;
}

colgroup col:nth-child(2) {
    width: 50%;
    text-align: left;
}

table thead {
    border-bottom: 2px solid #000;
}

table thead th, table tbody td {
    font-size: 14px;
    border-bottom: 1px solid #ddd;
}

.pagination {
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.pagination a {
    border: 1px solid #ddd;
    padding: 5px 10px;
    color: black;
    border-radius: 5px;
    text-decoration: none;
}

.pagination a.active {
    background-color: #FD5D6C;
    color: white;
}

.pagination a:hover:not(.active) {
    background-color: #ddd;
}

.button-container {
    text-align: right;
    margin-top: 20px;
}

.free-title:hover {
    text-decoration: underline;
}

.ListTitle {
    color: black;
}

.ListTitle:hover {
    color: #FD5D6C;
    text-decoration: underline;
}

.pagination-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
}

.page-link {
    color: black;
    border-radius: 7px;
    margin: 5px;
}

.page-item.active .page-link {
    color: #FD5D6C;
    background-color: rgba(253, 93, 108, 0.11);
    border-radius: 7px;
    border-color: #FD5D6C;
}

.cat {
    width: 100px;
    height: 45px;
}

.codeGrpEditForm {
    display: flex; /* Flexbox를 사용하여 가로 정렬 */
    gap: 10px; /* 요소 간의 간격을 설정 */
    margin-top: 10px; /* 위쪽 여백 추가 */
}
.editComCodeGrp{
	width: 765px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-bottom: 10px;
}
.codeAddForm select {
    text-align: center; /* 가운데 정렬 */
    option {
        text-align: center; /* 옵션 텍스트 가운데 정렬 */
    }
}
.codeGrpUpdate, .codeGrpCancel{
	height: 46px;
}
/* 여기서부터 새로작성한거 */
.flex-container {
    display: flex;
    justify-content: space-between;
    gap: 20px; 
}

.table1, .table2{
    width: 48%; 
    margin-right: 0; /* 오른쪽 마진 제거, 테이블과 스크롤바 사이의 간격 줄이기 */
    border: none; /* 테이블의 경계선 제거 */
}

.table3 {
    width: 48%; 
    margin: 0; /* 추가적인 마진 제거 */
}
header{
	margin-bottom: 50px;
}
.list-button{
	background-color: white;
	border: none;
}
.search-pages {
    display: flex;   /* Flexbox를 활성화 */
    justify-content: space-around;  /* 각 항목 사이의 여백을 균등하게 분포 */
    align-items: stretch;  /* 모든 항목의 높이를 같게 맞춤 */
    width: 100%;  /* 컨테이너의 전체 너비를 사용 */
}

.search-page1, .search-page2, .search-page3 {
    flex: 1;  /* 각 섹션에 동일한 유연성을 부여 */
    margin: 5px;  /* 섹션 간 간격 추가 */
}
.scrollable-table {
    max-height: 600px; /* 최대 높이 설정 */
    overflow-y: auto; /* 세로 스크롤바 설정 */
    margin: 0px; /* 모든 마진 제거 */
    padding-right: 0px; /* 오른쪽 패딩 제거 */
}
/* 스크롤바 전체 스타일 */
.scrollable-table::-webkit-scrollbar {
    width: 8px; /* 스크롤바의 너비 */
    background-color:white; /* 스크롤바 배경 색상 */
}

/* 스크롤바 핸들 스타일 */
.scrollable-table::-webkit-scrollbar-thumb {
    background-color: white; /* 스크롤바 색상 */
    border-radius: 10px; /* 스크롤바 둥근 모서리 */
}

/* 스크롤바 트랙 스타일 */
.scrollable-table::-webkit-scrollbar-track {
    background-color: white; /* 스크롤 트랙의 배경 색상 */
    border-radius: 10px; /* 트랙의 둥근 모서리 */
}
</style>

<div class="container">
    <header>
        <h1>회원관리</h1>
        <h5>회원 이용제한</h5>
    </header>
    
    <!-- 회원목록과 신고 회원목록을 Flexbox로 정렬 -->
    <div class="flex-container">
    <!-- 회원목록 -->
    <div class="table1">
    <h3>
    <button type="button" class="list-button mem-list">회원목록</button>
    <button type="button" class="list-button ent-list" style="margin-left: 350px;">기업 목록</button>
    </h3>
<!--     <div class="scrollable-table"> -->
		<table>
			<colgroup>
				<col style="width: 10%;">
				<col style="width: 10%;">
				<col style="width: 8%;">
				<col style="width: 7.5%;">
				<col style="width: 7.5%;">
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: center;">아이디</th>
					<th style="text-align: center;">이름</th>
					<th style="text-align: center;">경고횟수</th>
					<th style="text-align: center;"></th>
					<th style="text-align: center;"></th>
				</tr>
			</thead>
	       <tbody class="memberData">
		        <c:forEach var="member" items="${memberVOList}">
		            <tr>
		                <td style="padding: 10px;">${member.mbrId}</td>
		                <td>${member.mbrNm}</td>
		                <td>${member.mbrWarnCo}</td>
		                <td><button>실렉트창</button></td>
		                <td><button>제한</button></td>
		            </tr>
		        </c:forEach>
		    </tbody>
		</table>
<!-- 		</div> -->
	</div>
    <div class="table2" style="display: none;">
        <h3><button type="button" class="list-button mem-list">회원목록</button>
    <button type="button" class="list-button ent-list" style="margin-left: 350px;">기업 목록</button></h3>
		<table>
			<colgroup>
				<col style="width: 10%;">
				<col style="width: 10%;">
				<col style="width: 8%;">
				<col style="width: 7.5%;">
				<col style="width: 7.5%;">
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: center;">아이디</th>
					<th style="text-align: center;">이름</th>
					<th style="text-align: center;">바뀌는지확인</th>
					<th style="text-align: center;"></th>
					<th style="text-align: center;"></th>
				</tr>
			</thead>
			<tbody>
				<c:forEach var="codeVO" items="${filteredCodeList}">
				</c:forEach>
			</tbody>
		</table>
	</div>
    <!-- 신고 회원목록 -->
    <div class="table3">
    <h3>신고 회원목록</h3>
	<table>
		<colgroup>
			<col style="width: 10%;">
			<col style="width: 20%;">
			<col style="width: 8%;">
			<col style="width: 7.5%;">
			<col style="width: 7.5%;">
		</colgroup>
		<thead>
			<tr>
				<th style="text-align: center;">아이디</th>
				<th style="text-align: center;">신고내용</th>
				<th style="text-align: center;">경고횟수</th>
				<th style="text-align: center;"></th>
				<th style="text-align: center;"></th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="codeVO" items="${filteredCodeList}">
			</c:forEach>
		</tbody>
	</table>
	</div>
	</div>


	<div class="search-pages">
	<!-- 페이지네이션1 -->
	<div class="search-page1" >
		<div id="pagination1" class="pagination-container">
			<div class="pagination">
				<c:if test="${articlePage.startPage gt 5}">
					<li class="paginate_button page-item previous"><a
						href="/adm/codeManage?currentPage=${articlePage.startPage-5}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
						class="page-link">&lt;</a></li>
				</c:if>
				<c:forEach var="pNo" begin="${articlePage.startPage}"
					end="${articlePage.endPage}">
					<c:choose>
						<c:when test="${pNo eq articlePage.currentPage}">
							<li class="paginate_button page-item active"><a
								href="/adm/codeManage?currentPage=${pNo}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
								class="page-link">${pNo}</a></li>
						</c:when>
						<c:otherwise>
							<li class="paginate_button page-item"><a
								href="/adm/codeManage?currentPage=${pNo}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
								class="page-link">${pNo}</a></li>
						</c:otherwise>
					</c:choose>
				</c:forEach>
				<c:if test="${articlePage.endPage lt articlePage.totalPages}">
					<li class="paginate_button page-item previous"><a
						href="/adm/codeManage?currentPage=${articlePage.startPage+5}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
						class="page-link">&gt;</a></li>
				</c:if>
			</div>
		</div>
		<div class="search-container">
			<form id="filterForm" method="get" onsubmit="return false;">
				<input type="hidden" name="currentPage" value="1">
				<!-- 항상 1페이지로 설정 -->
				 <input type="text" id="searchInput1" name="searchKeyword" placeholder="회원을 검색하세요">
				 <button id="memSearch" type="button" class="filter-button search-button memSearch">회원검색</button>
			</form>
		</div>
	</div>
	<!-- 페이지네이션2 -->
	<div class="search-page2" style="display: none">
		<div class="pagination-container">
			<div class="pagination">
				<c:if test="${articlePage.startPage gt 5}">
					<li class="paginate_button page-item previous"><a
						href="/adm/codeManage?currentPage=${articlePage.startPage-5}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
						class="page-link">&lt;</a></li>
				</c:if>
				<c:forEach var="pNo" begin="${articlePage.startPage}"
					end="${articlePage.endPage}">
					<c:choose>
						<c:when test="${pNo eq articlePage.currentPage}">
							<li class="paginate_button page-item active"><a
								href="/adm/codeManage?currentPage=${pNo}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
								class="page-link">${pNo}</a></li>
						</c:when>
						<c:otherwise>
							<li class="paginate_button page-item"><a
								href="/adm/codeManage?currentPage=${pNo}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
								class="page-link">${pNo}</a></li>
						</c:otherwise>
					</c:choose>
				</c:forEach>
				<c:if test="${articlePage.endPage lt articlePage.totalPages}">
					<li class="paginate_button page-item previous"><a
						href="/adm/codeManage?currentPage=${articlePage.startPage+5}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
						class="page-link">&gt;</a></li>
				</c:if>
			</div>
		</div>
		<div class="search-container">
			<form id="filterForm"
				action="${pageContext.request.contextPath}/adm/codeManage"
				method="get" onsubmit="resetFilters()">
				<input type="hidden" name="currentPage" value="1">
				<!-- 항상 1페이지로 설정 -->
				<input type="text" id="searchInput2" name="searchKeyword" placeholder="기업을 검색하세요"
					value="${param.searchKeyword}">
				<button type="submit" class="filter-button search-button entSearch">기업검색</button>
			</form>
		</div>
	</div>
	<!-- 페이지네이션3 -->
	<div class="search-page3">
		<div class="pagination-container">
			<div class="pagination">
				<c:if test="${articlePage.startPage gt 5}">
					<li class="paginate_button page-item previous"><a
						href="/adm/codeManage?currentPage=${articlePage.startPage-5}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
						class="page-link">&lt;</a></li>
				</c:if>
				<c:forEach var="pNo" begin="${articlePage.startPage}"
					end="${articlePage.endPage}">
					<c:choose>
						<c:when test="${pNo eq articlePage.currentPage}">
							<li class="paginate_button page-item active"><a
								href="/adm/codeManage?currentPage=${pNo}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
								class="page-link">${pNo}</a></li>
						</c:when>
						<c:otherwise>
							<li class="paginate_button page-item"><a
								href="/adm/codeManage?currentPage=${pNo}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
								class="page-link">${pNo}</a></li>
						</c:otherwise>
					</c:choose>
				</c:forEach>
				<c:if test="${articlePage.endPage lt articlePage.totalPages}">
					<li class="paginate_button page-item previous"><a
						href="/adm/codeManage?currentPage=${articlePage.startPage+5}&comCodeGrp=${param.comCodeGrp}&searchKeyword=${param.searchKeyword}"
						class="page-link">&gt;</a></li>
				</c:if>
			</div>
		</div>
		<div class="search-container">
			<form id="filterForm"
				action="${pageContext.request.contextPath}/adm/codeManage"
				method="get" onsubmit="resetFilters()">
				<input type="hidden" name="currentPage" value="1">
				<!-- 항상 1페이지로 설정 -->
				<input type="text" id="searchInput3" name="searchKeyword" placeholder="제목을 검색하세요"
					value="${param.searchKeyword}">
				<button type="submit" class="filter-button search-button reportSearch">검색</button>
			</form>
		</div>
	</div>
	</div>
</div>

<script type="text/javascript">

$(document).ready(function() {
    $(document).on("click", '.mem-list', function() {
        $('.table1').show(); 
        $('.search-page1').show(); 
        $('.table2').hide(); 
        $('.search-page2').hide(); 
    });
    $(document).on("click", '.ent-list', function() {
        $('.table2').show(); 
        $('.search-page2').show(); 
        $('.table1').hide(); 
        $('.search-page1').hide(); 
        
    });
    
    //회원 검색 페이징
     // 회원 검색 버튼 이벤트
    $("#memSearch").on("click", function() {
    	$('.pagination1').show();
        var searchKeyword = $("#searchInput1").val();
        loadMembers(1, searchKeyword);
    });

    function loadMembers(currentPage, searchKeyword) {
        $.ajax({
            url: '/adm/memList',
            type: 'GET',
            dataType: 'json',
            data: {currentPage: currentPage, searchKeyword: searchKeyword},
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(response) {
                updateTable(response.content);
                updatePagination(response.currentPage, response.totalPages);
            },
            error: function(error) {
                alert('데이터 로드 실패');
                console.error('Error:', error);
            }
        });
    }

    function updateTable(members) {
        var tableBody = $(".memberData");
        tableBody.empty();
        $.each(members, function(index, member) {
            var row = '<tr style="padding: 10px;">' +
                '<td>' + member.mbrId + '</td>' +
                '<td>' + member.mbrNm + '</td>' +
                '<td>' + member.mbrWarnCo + '</td>' +
                '<td>선택창</td>' +
                '<td>버튼</td>' +
                '</tr>';
            tableBody.append(row);
        });
    }
    function updatePagination(currentPage, totalPages) {
        var pagination = $("#pagination1");
        pagination.empty();
        for (var i = 1; i <= totalPages; i++) {
            var isActive = i === currentPage ? "active" : "";
            pagination.append('<a href="#" class="page-link ' + isActive + '" data-page="' + i + '">' + i + '</a>');
        }
        
        $(".page-link").on("click", function(e) {
            e.preventDefault();
            var page = $(this).data("page");
            loadMembers(page, $("#searchInput1").val());
        });
    }
});
</script>

